/******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
			/******/ 			return installedModules[moduleId].exports;
			/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
			/******/ 			i: moduleId,
			/******/ 			l: false,
			/******/ 			exports: {}
			/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
			/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
			/******/ 		}
		/******/ 	};
	/******/
	/******/ 	// define __esModule on exports
	/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
			/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
			/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
	/******/
	/******/ 	// create a fake namespace object
	/******/ 	// mode & 1: value is a module id, require it
	/******/ 	// mode & 2: merge all properties of value into the ns
	/******/ 	// mode & 4: return value when already ns object
	/******/ 	// mode & 8|1: behave like require
	/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
	/******/
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
			/******/ 			function getDefault() { return module['default']; } :
			/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
	/******/
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = "./src/cluster/clusters-block.jsx");
	/******/ })
	/************************************************************************/
	/******/ ({

		/***/ "./src/cluster/clusters-block.jsx":
		/*!****************************************!*\
		  !*** ./src/cluster/clusters-block.jsx ***!
		  \****************************************/
		/*! no static exports found */
		/***/ (function(module, exports, __webpack_require__) {

			"use strict";
			eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _categorySelect = __webpack_require__(/*! ./views/category-select.jsx */ \"./src/cluster/views/category-select.jsx\");\n\nvar _pageSelect = __webpack_require__(/*! ./views/page-select.jsx */ \"./src/cluster/views/page-select.jsx\");\n\nvar _postSelect = __webpack_require__(/*! ./views/post-select.jsx */ \"./src/cluster/views/post-select.jsx\");\n\nvar _tagSelect = __webpack_require__(/*! ./views/tag-select.jsx */ \"./src/cluster/views/tag-select.jsx\");\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar __ = wp.i18n.__;\nvar RawHTML = wp.element.RawHTML;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar _wp$blockEditor = wp.blockEditor,\n    URLInput = _wp$blockEditor.URLInput,\n    InspectorControls = _wp$blockEditor.InspectorControls,\n    BlockControls = _wp$blockEditor.BlockControls,\n    RichText = _wp$blockEditor.RichText,\n    MediaUpload = _wp$blockEditor.MediaUpload;\nvar _wp$components = wp.components,\n    ToolbarGroup = _wp$components.ToolbarGroup,\n    Dropdown = _wp$components.Dropdown,\n    Dashicon = _wp$components.Dashicon,\n    RangeControl = _wp$components.RangeControl,\n    TextControl = _wp$components.TextControl,\n    Tooltip = _wp$components.Tooltip,\n    SelectControl = _wp$components.SelectControl,\n    ToggleControl = _wp$components.ToggleControl,\n    Spinner = _wp$components.Spinner,\n    Placeholder = _wp$components.Placeholder,\n    Button = _wp$components.Button,\n    Popover = _wp$components.Popover;\nvar _wp = wp,\n    apiFetch = _wp.apiFetch;\n\n\nvar CLUSTERS_BLOCK_DISPLAY_SETTINGS = {\n  page: {\n    title: __(\"Pages\", \"hostinger-affiliate-theme\"),\n    description: __(\"Select one or more pages\", \"hostinger-affiliate-theme\"),\n    value: \"page\"\n  },\n  post: {\n    title: __(\"Post\", \"hostinger-affiliate-theme\"),\n    description: __(\"Select one or more post\", \"hostinger-affiliate-theme\"),\n    value: \"post\"\n  },\n  category: {\n    title: __(\"Categories\", \"hostinger-affiliate-theme\"),\n    description: __(\"Select one or more categories\", \"hostinger-affiliate-theme\"),\n    value: \"category\"\n  },\n  tag: {\n    title: __(\"Tags\", \"hostinger-affiliate-theme\"),\n    description: __(\"Select one or more tags\", \"hostinger-affiliate-theme\"),\n    value: \"tag\"\n  },\n  pilar: {\n    title: __(\"Pillar Pages\", \"hostinger-affiliate-theme\"),\n    description: __(\"Displays all pages that have the Pillar page option.\", \"hostinger-affiliate-theme\"),\n    value: \"pilar\"\n  },\n  \"custom-links\": {\n    title: __(\"Customisable links\", \"hostinger-affiliate-theme\"),\n    description: __(\"Add various elements with fully customisable links, images and titles.\", \"hostinger-affiliate-theme\"),\n    value: \"custom-links\"\n  }\n};\n\nfunction supportsOrderby(display) {\n  return !(CLUSTERS_BLOCK_DISPLAY_SETTINGS.hasOwnProperty(display) && CLUSTERS_BLOCK_DISPLAY_SETTINGS[display].hasOwnProperty(\"no_orderby\") && CLUSTERS_BLOCK_DISPLAY_SETTINGS[display].no_orderby);\n}\n\nvar ClustersBlockSettingsEditorDisplayOption = function (_React$Component) {\n  _inherits(ClustersBlockSettingsEditorDisplayOption, _React$Component);\n\n  function ClustersBlockSettingsEditorDisplayOption() {\n    _classCallCheck(this, ClustersBlockSettingsEditorDisplayOption);\n\n    return _possibleConstructorReturn(this, (ClustersBlockSettingsEditorDisplayOption.__proto__ || Object.getPrototypeOf(ClustersBlockSettingsEditorDisplayOption)).apply(this, arguments));\n  }\n\n  _createClass(ClustersBlockSettingsEditorDisplayOption, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var icon = \"arrow-right-alt2\";\n\n      if (\"filter\" === this.props.value && this.props.extended) {\n        icon = \"arrow-down-alt2\";\n      }\n\n      var classes = \"orbital-clusters-display-options__option orbital-clusters-display-options__option--\" + this.props.value;\n\n      if (this.props.current === this.props.value) {\n        icon = \"yes\";\n        classes += \" orbital-clusters-display-options__option--current\";\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        {\n          className: classes,\n          onClick: function onClick() {\n            _this2.props.current !== _this2.props.value && _this2.props.update_display_callback(_this2.props.value);\n          }\n        },\n        wp.element.createElement(\n          \"div\",\n          { className: \"orbital-clusters-display-options__option-content\" },\n          wp.element.createElement(\n            \"span\",\n            { className: \"orbital-clusters-display-options__option-title\" },\n            this.props.title\n          ),\n          wp.element.createElement(\n            \"p\",\n            { className: \"orbital-clusters-display-options__option-description\" },\n            this.props.description\n          )\n        ),\n        wp.element.createElement(\n          \"div\",\n          { className: \"orbital-clusters-display-options__icon\" },\n          wp.element.createElement(Dashicon, { icon: icon })\n        )\n      );\n    }\n  }]);\n\n  return ClustersBlockSettingsEditorDisplayOption;\n}(React.Component);\n\nvar ClustersBlockSettingsEditorDisplayOptions = function (_React$Component2) {\n  _inherits(ClustersBlockSettingsEditorDisplayOptions, _React$Component2);\n\n  function ClustersBlockSettingsEditorDisplayOptions(props) {\n    _classCallCheck(this, ClustersBlockSettingsEditorDisplayOptions);\n\n    var _this3 = _possibleConstructorReturn(this, (ClustersBlockSettingsEditorDisplayOptions.__proto__ || Object.getPrototypeOf(ClustersBlockSettingsEditorDisplayOptions)).call(this, props));\n\n    _this3.setWrapperRef = _this3.setWrapperRef.bind(_this3);\n    _this3.handleClickOutside = _this3.handleClickOutside.bind(_this3);\n    return _this3;\n  }\n\n  _createClass(ClustersBlockSettingsEditorDisplayOptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.existing) {\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.existing) {\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\n      }\n    }\n  }, {\n    key: \"setWrapperRef\",\n    value: function setWrapperRef(node) {\n      this.wrapperRef = node;\n    }\n  }, {\n    key: \"handleClickOutside\",\n    value: function handleClickOutside(evt) {\n      if (this.wrapperRef && !this.wrapperRef.contains(event.target) && \"orbital-clusters-settings-heading__change-button button-link\" !== event.target.getAttribute(\"class\")) {\n        this.props.closeMenu();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = \"orbital-clusters-display-options\";\n\n      if (this.props.extended) {\n        classes += \" orbital-clusters-display-options--extended\";\n      }\n\n      if (this.props.existing) {\n        classes += \" orbital-clusters-display-options--popover\";\n      }\n\n      var display_settings = [];\n      for (var setting_key in CLUSTERS_BLOCK_DISPLAY_SETTINGS) {\n        display_settings.push(wp.element.createElement(ClustersBlockSettingsEditorDisplayOption, _extends({}, CLUSTERS_BLOCK_DISPLAY_SETTINGS[setting_key], {\n          update_display_callback: this.props.update_display_callback,\n          extended: this.props.extended,\n          current: this.props.current\n        })));\n      }\n\n      var arrow = wp.element.createElement(\"span\", { className: \"orbital-clusters-display-options--popover__arrow\" });\n      var description = wp.element.createElement(\n        \"p\",\n        { className: \"orbital-clusters-block-description\" },\n        __(\"Choose which type of cluster you want to create\", \"hostinger-affiliate-theme\")\n      );\n\n      return wp.element.createElement(\n        \"div\",\n        { className: classes, ref: this.setWrapperRef },\n        this.props.existing && arrow,\n        !this.props.existing && description,\n        display_settings\n      );\n    }\n  }]);\n\n  return ClustersBlockSettingsEditorDisplayOptions;\n}(React.Component);\n\nvar ClustersBlockSettingsEditor = function (_React$Component3) {\n  _inherits(ClustersBlockSettingsEditor, _React$Component3);\n\n  function ClustersBlockSettingsEditor(props) {\n    _classCallCheck(this, ClustersBlockSettingsEditor);\n\n    var _this4 = _possibleConstructorReturn(this, (ClustersBlockSettingsEditor.__proto__ || Object.getPrototypeOf(ClustersBlockSettingsEditor)).call(this, props));\n\n    _this4.state = {\n      display: props.selected_display,\n      menu_visible: props.selected_display ? false : true,\n      expanded_group: \"\"\n    };\n\n    _this4.updateDisplay = _this4.updateDisplay.bind(_this4);\n    _this4.closeMenu = _this4.closeMenu.bind(_this4);\n    return _this4;\n  }\n\n  _createClass(ClustersBlockSettingsEditor, [{\n    key: \"updateDisplay\",\n    value: function updateDisplay(value) {\n      var new_state = {\n        display: value,\n        menu_visible: false,\n        expanded_group: \"\"\n      };\n\n      var is_group = \"undefined\" !== CLUSTERS_BLOCK_DISPLAY_SETTINGS[value].group_container && CLUSTERS_BLOCK_DISPLAY_SETTINGS[value].group_container;\n\n      if (is_group) {\n        new_state = {\n          menu_visible: true,\n          expanded_group: value\n        };\n\n        if (this.state.expanded_group === CLUSTERS_BLOCK_DISPLAY_SETTINGS[value].group_container) {\n          new_state.expanded_group = \"\";\n        }\n      }\n\n      this.setState(new_state);\n\n      if (!is_group) {\n        this.props.update_display_callback(value);\n      }\n    }\n  }, {\n    key: \"closeMenu\",\n    value: function closeMenu() {\n      this.setState({\n        menu_visible: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var extra_settings = null;\n      if (\"page\" === this.state.display) {\n        extra_settings = wp.element.createElement(_pageSelect.ClustersPageSelect, this.props);\n      } else if (\"post\" === this.state.display) {\n        extra_settings = wp.element.createElement(_postSelect.ClustersPostSelect, this.props);\n      } else if (\"category\" === this.state.display) {\n        extra_settings = wp.element.createElement(_categorySelect.ClustersCategorySelect, this.props);\n      } else if (\"tag\" === this.state.display) {\n        extra_settings = wp.element.createElement(_tagSelect.ClustersTagSelect, this.props);\n      }\n\n      var menu = this.state.menu_visible ? wp.element.createElement(ClustersBlockSettingsEditorDisplayOptions, {\n        extended: this.state.expanded_group ? true : false,\n        existing: this.state.display ? true : false,\n        current: this.state.display,\n        closeMenu: this.closeMenu,\n        update_display_callback: this.updateDisplay\n      }) : null;\n\n      var heading = null;\n      if (this.state.display) {\n        var group_options = [];\n        var should_group_expand = group_options.includes(this.state.display) ? this.state.display : \"\";\n        var menu_link = wp.element.createElement(\n          \"button\",\n          {\n            type: \"button\",\n            className: \"orbital-clusters-settings-heading__change-button button-link\",\n            onClick: function onClick() {\n              _this5.setState({\n                menu_visible: !_this5.state.menu_visible,\n                expanded_group: should_group_expand\n              });\n            }\n          },\n          __(\"Display different clusters\", \"hostinger-affiliate-theme\")\n        );\n\n        heading = wp.element.createElement(\n          \"div\",\n          { className: \"orbital-clusters-settings-heading\" },\n          wp.element.createElement(\n            \"div\",\n            { className: \"orbital-clusters-settings-heading__current\" },\n            __(\"Displaying \", \"hostinger-affiliate-theme\"),\n            wp.element.createElement(\n              \"strong\",\n              null,\n              CLUSTERS_BLOCK_DISPLAY_SETTINGS[this.state.display].title\n            )\n          ),\n          wp.element.createElement(\n            \"div\",\n            { className: \"orbital-clusters-settings-heading__change\" },\n            menu_link\n          )\n        );\n      }\n\n      var done_button = wp.element.createElement(\n        \"button\",\n        {\n          type: \"button\",\n          className: \"button orbital-clusters-settings__footer-button\",\n          onClick: this.props.done_callback\n        },\n        __(\"Complete\", \"hostinger-affiliate-theme\")\n      );\n      if ([\"\", \"post\", \"category\", \"tag\", \"page\"].includes(this.state.display) && !this.props.selected_display_setting.length) {\n        var done_tooltips = {\n          \"\": __(\"Please select which clusters you'd like to display\", \"hostinger-affiliate-theme\"),\n          post: __(\"Please select at least one page to display\", \"hostinger-affiliate-theme\"),\n          category: __(\"Please select at least one category to display\", \"hostinger-affiliate-theme\"),\n          tag: __(\"Please select at least one tag to display\", \"hostinger-affiliate-theme\"),\n          page: __(\"Please select at least one page to display\", \"hostinger-affiliate-theme\")\n        };\n\n        done_button = wp.element.createElement(\n          Tooltip,\n          { text: done_tooltips[this.state.display] },\n          wp.element.createElement(\n            \"button\",\n            {\n              type: \"button\",\n              className: \"button orbital-clusters-settings__footer-button disabled\"\n            },\n            __(\"Done\", \"hostinger-affiliate-theme\")\n          )\n        );\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        {\n          className: \"orbital-clusters-settings \" + (this.state.expanded_group ? \"expanded-group-\" + this.state.expanded_group : \"\")\n        },\n        wp.element.createElement(\n          \"h4\",\n          { className: \"orbital-clusters-settings__title\" },\n          wp.element.createElement(Dashicon, { icon: \"grid-view\" }),\n          \" \",\n          __(\"Cluster\", \"hostinger-affiliate-theme\")\n        ),\n        heading,\n        menu,\n        extra_settings,\n        wp.element.createElement(\n          \"div\",\n          { className: \"orbital-clusters-settings__footer\" },\n          done_button\n        )\n      );\n    }\n  }]);\n\n  return ClustersBlockSettingsEditor;\n}(React.Component);\n\nvar ClusterPreview = function (_React$Component4) {\n  _inherits(ClusterPreview, _React$Component4);\n\n  function ClusterPreview() {\n    _classCallCheck(this, ClusterPreview);\n\n    return _possibleConstructorReturn(this, (ClusterPreview.__proto__ || Object.getPrototypeOf(ClusterPreview)).apply(this, arguments));\n  }\n\n  _createClass(ClusterPreview, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          attributes = _props.attributes,\n          cluster = _props.cluster,\n          setAttributes = _props.setAttributes;\n      var settings = attributes.settings;\n\n\n      var settingsJson = JSON.parse(settings);\n\n      var image = null;\n      var source_image = null;\n\n      if (typeof cluster[\"_embedded\"][\"wp:featuredmedia\"] != \"undefined\") {\n        image = cluster[\"_embedded\"][\"wp:featuredmedia\"][\"0\"].source_url;\n        source_image = cluster[\"_embedded\"][\"wp:featuredmedia\"][\"0\"].id;\n      } else if (typeof settingsJson[cluster.id] != \"undefined\") {\n        image = settingsJson[cluster.id][\"urlThumbnail\"];\n      }\n\n      var onSelectImage = function onSelectImage(img) {\n        if (settingsJson[cluster.id]) {\n          settingsJson[cluster.id][\"idThumbnail\"] = img.id;\n          settingsJson[cluster.id][\"urlThumbnail\"] = img.url;\n        } else {\n          settingsJson[cluster.id] = {\n            idThumbnail: img.id,\n            urlThumbnail: img.url\n          };\n        }\n\n        setAttributes({ settings: JSON.stringify(settingsJson, null) });\n      };\n\n      return wp.element.createElement(\n        \"div\",\n        { className: \"cluster-preview\", key: cluster.id + \"-preview\" },\n        wp.element.createElement(MediaUpload, {\n          onSelect: onSelectImage,\n          allowedTypes: \"image\",\n          value: settingsJson[cluster.id] ? settingsJson[cluster.id].idThumbnail : source_image,\n          render: function render(_ref) {\n            var open = _ref.open;\n            return wp.element.createElement(\n              \"div\",\n              { className: \"cluster-edit-image\" },\n              wp.element.createElement(OrbitalPopover, {\n                attributes: attributes,\n                setAttributes: setAttributes,\n                cluster: cluster.id\n              }),\n              wp.element.createElement(Button, {\n                className: \"components-toolbar__control\",\n                label: __(\"Edit image\", \"hostinger-affiliate-theme\"),\n                icon: \"format-image\",\n                onClick: open\n              }),\n              image && wp.element.createElement(\"img\", {\n                src: settingsJson[cluster.id] ? typeof settingsJson[cluster.id].urlThumbnail !== \"undefined\" ? settingsJson[cluster.id].urlThumbnail : image : image\n              }),\n              !image && wp.element.createElement(Placeholder, { label: __(\"No image\", \"hostinger-affiliate-theme\") })\n            );\n          }\n        }),\n        wp.element.createElement(\n          \"div\",\n          { className: \"cluster-title\" },\n          wp.element.createElement(RichText, {\n            formattingControls: [\"bold\", \"italic\", \"underline\"],\n            tagName: \"h3\",\n            value: settingsJson[cluster.id] ? typeof settingsJson[cluster.id].heading !== \"undefined\" ? settingsJson[cluster.id].heading : cluster.title.rendered : cluster.title.rendered,\n            onChange: function onChange(value) {\n              if (settingsJson[cluster.id]) {\n                settingsJson[cluster.id][\"heading\"] = value;\n              } else {\n                settingsJson[cluster.id] = {\n                  heading: value\n                };\n              }\n              setAttributes({ settings: JSON.stringify(settingsJson, null) });\n            }\n          })\n        )\n      );\n    }\n  }]);\n\n  return ClusterPreview;\n}(React.Component);\n\nvar ClusterCustomLinksPreview = function (_React$Component5) {\n  _inherits(ClusterCustomLinksPreview, _React$Component5);\n\n  function ClusterCustomLinksPreview() {\n    _classCallCheck(this, ClusterCustomLinksPreview);\n\n    return _possibleConstructorReturn(this, (ClusterCustomLinksPreview.__proto__ || Object.getPrototypeOf(ClusterCustomLinksPreview)).apply(this, arguments));\n  }\n\n  _createClass(ClusterCustomLinksPreview, [{\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          attributes = _props2.attributes,\n          cluster = _props2.cluster,\n          setAttributes = _props2.setAttributes;\n      var settings = attributes.settings;\n\n      var settingsJson = JSON.parse(settings);\n      var image = null;\n      var source_image = null;\n\n      if (typeof settingsJson[cluster] != \"undefined\") {\n        image = settingsJson[cluster][\"urlThumbnail\"];\n      }\n\n      var onSelectImage = function onSelectImage(img) {\n        if (settingsJson[cluster]) {\n          settingsJson[cluster][\"idThumbnail\"] = img.id;\n          settingsJson[cluster][\"urlThumbnail\"] = img.url;\n        } else {\n          settingsJson[cluster] = {\n            idThumbnail: img.id,\n            urlThumbnail: img.url\n          };\n        }\n\n        setAttributes({ settings: JSON.stringify(settingsJson, null) });\n      };\n\n      return wp.element.createElement(\n        \"div\",\n        { className: \"cluster-preview\", key: cluster + \"-preview\" },\n        wp.element.createElement(MediaUpload, {\n          onSelect: onSelectImage,\n          allowedTypes: \"image\",\n          value: settingsJson[cluster] ? settingsJson[cluster].idThumbnail : source_image,\n          render: function render(_ref2) {\n            var open = _ref2.open;\n            return wp.element.createElement(\n              \"div\",\n              { className: \"cluster-edit-image\" },\n              wp.element.createElement(OrbitalPopover, {\n                attributes: attributes,\n                setAttributes: setAttributes,\n                cluster: cluster\n              }),\n              wp.element.createElement(Button, {\n                className: \"components-toolbar__control\",\n                label: __(\"Edit image\", \"hostinger-affiliate-theme\"),\n                icon: \"format-image\",\n                onClick: open\n              }),\n              image && wp.element.createElement(\"img\", {\n                src: settingsJson[cluster] ? typeof settingsJson[cluster].urlThumbnail !== \"undefined\" ? settingsJson[cluster].urlThumbnail : image : image\n              }),\n              !image && wp.element.createElement(Placeholder, { label: __(\"No image\", \"hostinger-affiliate-theme\") })\n            );\n          }\n        }),\n        wp.element.createElement(\n          \"div\",\n          { className: \"cluster-title\" },\n          wp.element.createElement(RichText, {\n            formattingControls: [\"bold\", \"italic\", \"underline\"],\n            tagName: \"h3\",\n            value: settingsJson[cluster] ? typeof settingsJson[cluster].heading !== \"undefined\" ? settingsJson[cluster].heading : \"Title** \" + cluster : \"Title \" + cluster,\n            onChange: function onChange(value) {\n              if (settingsJson[cluster]) {\n                settingsJson[cluster][\"heading\"] = value;\n              } else {\n                settingsJson[cluster] = {\n                  heading: value\n                };\n              }\n              setAttributes({ settings: JSON.stringify(settingsJson, null) });\n            }\n          })\n        )\n      );\n    }\n  }]);\n\n  return ClusterCustomLinksPreview;\n}(React.Component);\n\nvar ClustersBlockPreview = function (_React$Component6) {\n  _inherits(ClustersBlockPreview, _React$Component6);\n\n  function ClustersBlockPreview(props) {\n    _classCallCheck(this, ClustersBlockPreview);\n\n    var _this8 = _possibleConstructorReturn(this, (ClustersBlockPreview.__proto__ || Object.getPrototypeOf(ClustersBlockPreview)).call(this, props));\n\n    _this8.state = {\n      posts: [],\n      loaded: false,\n      query: \"\"\n    };\n\n    _this8.updatePreview = _this8.updatePreview.bind(_this8);\n    _this8.getQuery = _this8.getQuery.bind(_this8);\n    return _this8;\n  }\n\n  _createClass(ClustersBlockPreview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePreview();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.getQuery() !== this.state.query && this.state.loaded) {\n        this.updatePreview();\n      }\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      var _props$attributes = this.props.attributes,\n          columns = _props$attributes.columns,\n          rows = _props$attributes.rows,\n          display = _props$attributes.display,\n          display_setting = _props$attributes.display_setting,\n          orderby = _props$attributes.orderby;\n      var setAttributes = this.props.setAttributes.setAttributes;\n\n      var urlParams = new URLSearchParams(window.location.search);\n      var myParam = urlParams.get(\"post\");\n\n      var query = {\n        per_page: rows\n      };\n\n      if (\"page\" === display || \"post\" === display) {\n        query.include = display_setting.join(\",\");\n        query.per_page = display_setting.length;\n      } else if (\"category\" === display) {\n        query.categories = display_setting.join(\",\");\n      } else if (\"tag\" === display) {\n        query.tags = display_setting.join(\",\");\n      }\n\n      if (supportsOrderby(display)) {\n        if (\"rand\" === orderby) {\n          query.orderby = \"id\";\n        } else if (\"ID_asc\" === orderby) {\n          query.orderby = \"id\";\n          query.order = \"asc\";\n        } else if (\"ID_desc\" === orderby) {\n          query.orderby = \"id\";\n          query.order = \"desc\";\n        } else if (\"title_asc\" === orderby) {\n          query.orderby = \"title\";\n          query.order = \"asc\";\n        } else if (\"title_desc\" === orderby) {\n          query.orderby = \"title\";\n          query.order = \"desc\";\n        } else if (\"name_asc\" === orderby) {\n          query.orderby = \"slug\";\n          query.order = \"asc\";\n        } else if (\"name_desc\" === orderby) {\n          query.orderby = \"slug\";\n          query.order = \"desc\";\n        } else if (\"date_asc\" === orderby) {\n          query.orderby = \"date\";\n          query.order = \"asc\";\n        } else if (\"date_desc\" === orderby) {\n          query.orderby = \"date\";\n          query.order = \"desc\";\n        } else if (\"modified_asc\" === orderby) {\n          query.orderby = \"modified\";\n          query.order = \"asc\";\n        } else if (\"modified_desc\" === orderby) {\n          query.orderby = \"modified\";\n          query.order = \"desc\";\n        } else if (\"parent_asc\" === orderby) {\n          query.orderby = \"parent\";\n          query.order = \"asc\";\n        } else if (\"parent_desc\" === orderby) {\n          query.orderby = \"parent\";\n          query.order = \"desc\";\n        } else if (\"menu_order_asc\" === orderby) {\n          query.orderby = \"id\";\n          query.order = \"asc\";\n        } else if (\"menu_order_desc\" === orderby) {\n          query.orderby = \"id\";\n          query.order = \"desc\";\n        } else if (\"comment_count_asc\" === orderby) {\n          query.orderby = \"id\";\n          query.order = \"asc\";\n        } else if (\"comment_count_desc\" === orderby) {\n          query.orderby = \"id\";\n          query.order = \"desc\";\n        } else {\n          query.orderby = orderby;\n        }\n      }\n\n      var query_string = \"?\";\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Object.keys(query)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n\n          query_string += key + \"=\" + query[key] + \"&\";\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (\"page\" === display) {\n        return \"/wp/v2/pages\" + query_string + \"_embed\";\n      }\n\n      if (\"post\" === display) {\n        return \"/wp/v2/posts\" + query_string + \"_embed\";\n      }\n\n      if (\"pilar\" === display) {\n        return \"/wp/v2/pages\" + query_string + \"_embed\" + \"&meta_key=option_page_pilar&meta_value=1\";\n      }\n\n      if (\"custom-links\" === display) {\n        return \"\";\n      }\n\n      return \"/wp/v2/posts\" + query_string + \"&_embed\";\n    }\n  }, {\n    key: \"updatePreview\",\n    value: function updatePreview() {\n      var self = this;\n      var query = this.getQuery();\n\n      self.setState({\n        loaded: false,\n        query: query\n      });\n\n      apiFetch({ path: query }).then(function (clusters) {\n        self.setState({\n          clusters: clusters,\n          loaded: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.loaded) {\n        return wp.element.createElement(\n          Placeholder,\n          { icon: \"grid-view\", label: __(\"Loading Clusters\", \"hostinger-affiliate-theme\") },\n          wp.element.createElement(Spinner, null)\n        );\n      }\n\n      if (0 === this.state.clusters.length) {\n        return __(\"No posts found\", \"hostinger-affiliate-theme\");\n      }\n\n      var classes = \"orbital-clusters-block-preview cols-\" + this.props.attributes.columns;\n      var self = this;\n\n      /*\n       *\n       *\tCUSTOM LINKS\n       *\n       */\n\n      if (\"custom-links\" === self.props.attributes.display) {\n        var items = [];\n        for (var i = 1; i <= self.props.attributes.rows; i++) {\n          items.push(wp.element.createElement(ClusterCustomLinksPreview, {\n            cluster: i,\n            attributes: self.props.attributes,\n            setAttributes: self.props.setAttributes\n          }));\n        }\n\n        return wp.element.createElement(\n          \"div\",\n          { className: classes },\n          items\n        );\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        { className: classes },\n        this.state.clusters.map(function (cluster) {\n          return wp.element.createElement(ClusterPreview, {\n            cluster: cluster,\n            attributes: self.props.attributes,\n            setAttributes: self.props.setAttributes\n          });\n        })\n      );\n    }\n  }]);\n\n  return ClustersBlockPreview;\n}(React.Component);\n\nvar ClustersBlockSidebarInfo = function (_React$Component7) {\n  _inherits(ClustersBlockSidebarInfo, _React$Component7);\n\n  function ClustersBlockSidebarInfo(props) {\n    _classCallCheck(this, ClustersBlockSidebarInfo);\n\n    var _this9 = _possibleConstructorReturn(this, (ClustersBlockSidebarInfo.__proto__ || Object.getPrototypeOf(ClustersBlockSidebarInfo)).call(this, props));\n\n    _this9.state = {\n      categoriesInfo: [],\n      categoriesQuery: \"\",\n      pagesInfo: false,\n      pagesQuery: \"\",\n      postsInfo: false,\n      postsQuery: \"\",\n      tagsInfo: [],\n      tagsQuery: \"\"\n    };\n\n    _this9.updateInfo = _this9.updateInfo.bind(_this9);\n    _this9.getQueries = _this9.getQueries.bind(_this9);\n    return _this9;\n  }\n\n  _createClass(ClustersBlockSidebarInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateInfo();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var queries = this.getQueries();\n\n      if (this.state.categoriesQuery !== queries.categories || this.state.pagesQuery !== queries.pages || this.state.postsQuery !== queries.posts || this.state.tagsQuery !== queries.tags) {\n        this.updateInfo();\n      }\n    }\n  }, {\n    key: \"getQueries\",\n    value: function getQueries() {\n      var _props$attributes2 = this.props.attributes,\n          display = _props$attributes2.display,\n          display_setting = _props$attributes2.display_setting;\n\n\n      var endpoints = {\n        pages: \"\",\n        tags: \"\",\n        posts: \"\",\n        categories: \"\"\n      };\n\n      if (\"category\" === display && display_setting.length) {\n        endpoints.categories = \"/wp/v2/categories?include=\" + display_setting.join(\",\");\n      } else if (\"page\" === display && display_setting.length) {\n        endpoints.pages = \"/wp/v2/pages?include=\" + display_setting.join(\",\");\n      } else if (\"post\" === display && display_setting.length) {\n        endpoints.posts = \"/wp/v2/posts?include=\" + display_setting.join(\",\");\n      } else if (\"tag\" === display && display_setting.length) {\n        endpoints.tags = \"/wp/v2/tags?include=\" + display_setting.join(\",\");\n      }\n\n      return endpoints;\n    }\n  }, {\n    key: \"updateInfo\",\n    value: function updateInfo() {\n      var self = this;\n      var queries = this.getQueries();\n\n      this.setState({\n        categoriesQuery: queries.categories,\n        postsQuery: queries.posts,\n        pagesQuery: queries.pages,\n        tagsQuery: queries.tags\n      });\n\n      if (queries.categories.length) {\n        apiFetch({ path: queries.categories }).then(function (categories) {\n          self.setState({\n            categoriesInfo: categories\n          });\n        });\n      } else {\n        self.setState({\n          categoriesInfo: []\n        });\n      }\n\n      if (queries.pages.length) {\n        apiFetch({ path: queries.pages }).then(function (pages) {\n          self.setState({\n            pagesInfo: pages\n          });\n        });\n      } else {\n        self.setState({\n          pagesInfo: false\n        });\n      }\n\n      if (queries.posts.length) {\n        apiFetch({ path: queries.posts }).then(function (posts) {\n          self.setState({\n            postsInfo: posts\n          });\n        });\n      } else {\n        self.setState({\n          postsInfo: false\n        });\n      }\n\n      if (queries.tags.length) {\n        apiFetch({ path: queries.tags }).then(function (tags) {\n          self.setState({\n            tagsInfo: tags\n          });\n        });\n      } else {\n        self.setState({\n          tagsInfo: []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var descriptions = [CLUSTERS_BLOCK_DISPLAY_SETTINGS[this.props.attributes.display].title];\n\n      if (this.state.categoriesInfo.length) {\n        var descriptionText = __(\"Categories: \", \"hostinger-affiliate-theme\");\n        var categories = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.state.categoriesInfo[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var category = _step2.value;\n\n            categories.push(category.name);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        descriptionText += categories.join(\", \");\n\n        descriptions = [descriptionText];\n      } else if (this.state.pagesInfo) {\n        if (this.state.pagesInfo.length) {\n          var pageDescriptionText = __(\"Pages: \", \"hostinger-affiliate-theme\");\n          var pages = [];\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = this.state.pagesInfo[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var page = _step3.value;\n\n              pages.push(page.title.rendered);\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          descriptions.push(pages.join(\", \"));\n        }\n      } else if (this.state.postsInfo) {\n        descriptions = [__(\"Posts: \") + this.state.postsInfo.name];\n\n        if (this.state.postsInfo.length) {\n          var postDescriptionText = __(\"Posts: \", \"hostinger-affiliate-theme\");\n          var posts = [];\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = this.state.postsInfo[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var post = _step4.value;\n\n              posts.push(post.title.rendered);\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          postDescriptionText += posts.join(\", \");\n          descriptions.push(postDescriptionText);\n        }\n      } else if (this.state.tagsInfo) {\n        descriptions = [__(\"Tags: \", \"hostinger-affiliate-theme\") + this.state.tagsInfo.name];\n\n        if (this.state.tagsInfo.length) {\n          var tagDescriptionText = __(\"Tags: \", \"hostinger-affiliate-theme\");\n          var tags = [];\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = this.state.tagsInfo[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var tag = _step5.value;\n\n              tags.push(tag.name);\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          tagDescriptionText += tags.join(\", \");\n          descriptions.push(tagDescriptionText);\n        }\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        null,\n        descriptions.map(function (description) {\n          return wp.element.createElement(\n            \"div\",\n            { className: \"scope-description\" },\n            description\n          );\n        })\n      );\n    }\n  }]);\n\n  return ClustersBlockSidebarInfo;\n}(React.Component);\n\nvar ClustersBlock = function (_React$Component8) {\n  _inherits(ClustersBlock, _React$Component8);\n\n  function ClustersBlock(props) {\n    _classCallCheck(this, ClustersBlock);\n\n    var _this10 = _possibleConstructorReturn(this, (ClustersBlock.__proto__ || Object.getPrototypeOf(ClustersBlock)).call(this, props));\n\n    _this10.getInspectorControls = _this10.getInspectorControls.bind(_this10);\n    _this10.getToolbarControls = _this10.getToolbarControls.bind(_this10);\n    _this10.getBlockDescription = _this10.getBlockDescription.bind(_this10);\n    _this10.getPreview = _this10.getPreview.bind(_this10);\n    _this10.getSettingsEditor = _this10.getSettingsEditor.bind(_this10);\n    return _this10;\n  }\n\n  _createClass(ClustersBlock, [{\n    key: \"getInspectorControls\",\n    value: function getInspectorControls() {\n      var _props3 = this.props,\n          attributes = _props3.attributes,\n          setAttributes = _props3.setAttributes;\n      var rows = attributes.rows,\n          columns = attributes.columns,\n          display = attributes.display,\n          display_setting = attributes.display_setting,\n          orderby = attributes.orderby,\n          excerpt = attributes.excerpt,\n          links = attributes.links,\n          target = attributes.target,\n          thumbnailSize = attributes.thumbnailSize,\n          featured = attributes.featured,\n          button = attributes.button,\n          edit_mode = attributes.edit_mode;\n\n\n      var columnControl = wp.element.createElement(RangeControl, {\n        label: __(\"Columns\", \"hostinger-affiliate-theme\"),\n        value: columns ? columns : 3,\n        onChange: function onChange(value) {\n          return setAttributes({ columns: value });\n        },\n        min: 1,\n        max: 7\n      });\n\n      var orderControl = null;\n      if (supportsOrderby(display)) {\n        orderControl = wp.element.createElement(SelectControl, {\n          key: \"query-panel-select-order\",\n          label: __(\"Order Clusters By\", \"hostinger-affiliate-theme\"),\n          value: orderby,\n          options: [{\n            label: __(\"New First\", \"hostinger-affiliate-theme\"),\n            value: \"date_desc\"\n          }, {\n            label: __(\"Old First\", \"hostinger-affiliate-theme\"),\n            value: \"date_asc\"\n          }, {\n            label: __(\"Modified Date Desc\", \"hostinger-affiliate-theme\"),\n            value: \"modified_desc\"\n          }, {\n            label: __(\"Modified Date Asc\", \"hostinger-affiliate-theme\"),\n            value: \"modified_asc\"\n          }, {\n            label: __(\"ID Desc\", \"hostinger-affiliate-theme\"),\n            value: \"ID_desc\"\n          }, {\n            label: __(\"ID Asc\", \"hostinger-affiliate-theme\"),\n            value: \"ID_asc\"\n          }, {\n            label: __(\"Title Desc\", \"hostinger-affiliate-theme\"),\n            value: \"title_desc\"\n          }, {\n            label: __(\"Title Asc\", \"hostinger-affiliate-theme\"),\n            value: \"title_asc\"\n          }, {\n            label: __(\"Slug Desc\", \"hostinger-affiliate-theme\"),\n            value: \"name_desc\"\n          }, {\n            label: __(\"Slug Asc\", \"hostinger-affiliate-theme\"),\n            value: \"name_asc\"\n          }, {\n            label: __(\"Parent Desc\", \"hostinger-affiliate-theme\"),\n            value: \"parent_desc\"\n          }, {\n            label: __(\"Parent Asc\", \"hostinger-affiliate-theme\"),\n            value: \"parent_asc\"\n          }, {\n            label: __(\"Menu Order Desc\", \"hostinger-affiliate-theme\"),\n            value: \"menu_order_desc\"\n          }, {\n            label: __(\"Menu Order Asc\", \"hostinger-affiliate-theme\"),\n            value: \"menu_order_asc\"\n          }, {\n            label: __(\"Comment Count Desc\", \"hostinger-affiliate-theme\"),\n            value: \"comment_count_desc\"\n          }, {\n            label: __(\"Comment Count Asc\", \"hostinger-affiliate-theme\"),\n            value: \"comment_count_asc\"\n          }, {\n            label: __(\"Random\", \"hostinger-affiliate-theme\"),\n            value: \"rand\"\n          }],\n          onChange: function onChange(value) {\n            return setAttributes({ orderby: value });\n          }\n        });\n      }\n\n      var excerptControl = null;\n      if (supportsOrderby(display)) {\n        excerptControl = wp.element.createElement(SelectControl, {\n          key: \"query-panel-select-excerpt\",\n          label: __(\"Decription\", \"hostinger-affiliate-theme\"),\n          value: excerpt,\n          options: [{\n            label: __(\"Default\", \"hostinger-affiliate-theme\"),\n            value: \"default\"\n          }, {\n            label: __(\"Yoast SEO Meta Description\", \"hostinger-affiliate-theme\"),\n            value: \"yoast\"\n          }, {\n            label: __(\"None\", \"hostinger-affiliate-theme\"),\n            value: \"none\"\n          }],\n          onChange: function onChange(value) {\n            return setAttributes({ excerpt: value });\n          }\n        });\n      }\n\n      var linksControl = null;\n      if (supportsOrderby(display)) {\n        linksControl = wp.element.createElement(SelectControl, {\n          key: \"query-panel-select-links\",\n          label: __(\"Links\", \"hostinger-affiliate-theme\"),\n          value: links,\n          options: [{\n            label: __(\"Follow\", \"hostinger-affiliate-theme\"),\n            value: \"follow\"\n          }, {\n            label: __(\"No Follow\", \"hostinger-affiliate-theme\"),\n            value: \"nofollow\"\n          }],\n          onChange: function onChange(value) {\n            return setAttributes({ links: value });\n          }\n        });\n      }\n\n      var targetControl = null;\n      if (supportsOrderby(display)) {\n        targetControl = wp.element.createElement(SelectControl, {\n          key: \"query-panel-select-target\",\n          label: __(\"Target\", \"hostinger-affiliate-theme\"),\n          value: target,\n          options: [{\n            label: __(\"Default\", \"hostinger-affiliate-theme\"),\n            value: \"_self\"\n          }, {\n            label: __(\"Blank\", \"hostinger-affiliate-theme\"),\n            value: \"_blank\"\n          }],\n          onChange: function onChange(value) {\n            return setAttributes({ target: value });\n          }\n        });\n      }\n\n      var thumbnailSizeControl = null;\n      if (supportsOrderby(display)) {\n        thumbnailSizeControl = wp.element.createElement(SelectControl, {\n          key: \"query-panel-select-thumbnailSize\",\n          label: __(\"Thumbnail Size\", \"hostinger-affiliate-theme\"),\n          value: thumbnailSize,\n          options: [{\n            label: __(\"Thumbnail Center (default)\", \"hostinger-affiliate-theme\"),\n            value: \"thumbnail-center\"\n          }, {\n            label: __(\"Thumbnail\", \"hostinger-affiliate-theme\"),\n            value: \"thumbnail\"\n          }, {\n            label: __(\"Medium\", \"hostinger-affiliate-theme\"),\n            value: \"medium\"\n          }, {\n            label: __(\"Medium Large\", \"hostinger-affiliate-theme\"),\n            value: \"medium_large\"\n          }, {\n            label: __(\"Large\", \"hostinger-affiliate-theme\"),\n            value: \"large\"\n          }, {\n            label: __(\"Full\", \"hostinger-affiliate-theme\"),\n            value: \"full\"\n          }],\n          onChange: function onChange(value) {\n            return setAttributes({ thumbnailSize: value });\n          }\n        });\n      }\n\n      var rowControl = null;\n      if (supportsOrderby(display)) {\n        if (\"page\" !== display || \"post\" !== display) {\n          rowControl = wp.element.createElement(RangeControl, {\n            label: __(\"Posts per page\", \"hostinger-affiliate-theme\"),\n            value: rows,\n            onChange: function onChange(value) {\n              return setAttributes({ rows: value });\n            },\n            min: 1,\n            max: 99\n          });\n        }\n      }\n\n      var featuredControl = null;\n      if (supportsOrderby(display)) {\n        if (\"page\" !== display || \"post\" !== display) {\n          featuredControl = wp.element.createElement(RangeControl, {\n            label: __(\"Featured\", \"hostinger-affiliate-theme\"),\n            value: featured,\n            onChange: function onChange(value) {\n              return setAttributes({ featured: value });\n            },\n            min: 0,\n            max: 49\n          });\n        }\n      }\n\n      var buttonControl = null;\n      if (supportsOrderby(display)) {\n        if (\"custom-links\" === display) {\n          buttonControl = wp.element.createElement(TextControl, {\n            label: __(\"Button\", \"hostinger-affiliate-theme\"),\n            value: button,\n            onChange: function onChange(value) {\n              return setAttributes({ button: value });\n            }\n          });\n        }\n      }\n\n      return wp.element.createElement(\n        InspectorControls,\n        { key: \"inspector\" },\n        this.getBlockDescription(),\n        wp.element.createElement(\n          \"h3\",\n          null,\n          __(\"Layout\", \"hostinger-affiliate-theme\")\n        ),\n        columnControl,\n        rowControl,\n        featuredControl,\n        orderControl,\n        excerptControl,\n        linksControl,\n        targetControl,\n        thumbnailSizeControl,\n        buttonControl\n      );\n    }\n  }, {\n    key: \"getToolbarControls\",\n    value: function getToolbarControls() {\n      var props = this.props;\n      var attributes = props.attributes,\n          setAttributes = props.setAttributes;\n      var display = attributes.display,\n          display_setting = attributes.display_setting,\n          edit_mode = attributes.edit_mode;\n\n\n      var shouldDisableEditButton = [\"\", \"post\", \"page\", \"category\", \"tag\"].includes(display) && !display_setting.length;\n\n      var editButton = [{\n        icon: \"edit\",\n        title: __(\"Edit\", \"hostinger-affiliate-theme\"),\n        onClick: shouldDisableEditButton ? function () {} : function () {\n          return setAttributes({ edit_mode: !edit_mode });\n        },\n        isActive: edit_mode\n      }];\n\n      return wp.element.createElement(\n        BlockControls,\n        { key: \"controls\" },\n        wp.element.createElement(ToolbarGroup, { controls: editButton })\n      );\n    }\n  }, {\n    key: \"getBlockDescription\",\n    value: function getBlockDescription() {\n      var _props4 = this.props,\n          attributes = _props4.attributes,\n          setAttributes = _props4.setAttributes;\n      var display = attributes.display,\n          display_setting = attributes.display_setting,\n          edit_mode = attributes.edit_mode;\n\n\n      if (!display.length) {\n        return null;\n      }\n\n      function editQuicklinkHandler() {\n        setAttributes({\n          edit_mode: true\n        });\n      }\n\n      var editQuickLink = null;\n      if (!attributes.edit_mode) {\n        editQuickLink = wp.element.createElement(\n          \"div\",\n          { className: \"orbital-clusters-scope-description--edit-quicklink\" },\n          wp.element.createElement(\n            \"a\",\n            { onClick: editQuicklinkHandler },\n            __(\"Edit\", \"hostinger-affiliate-theme\")\n          )\n        );\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        { className: \"orbital-clusters-scope-descriptions\" },\n        wp.element.createElement(\n          \"div\",\n          { className: \"orbital-clusters-scope-details\" },\n          wp.element.createElement(\n            \"h3\",\n            null,\n            __(\"Current Source\", \"hostinger-affiliate-theme\")\n          ),\n          wp.element.createElement(ClustersBlockSidebarInfo, { attributes: attributes })\n        ),\n        editQuickLink\n      );\n    }\n  }, {\n    key: \"getPreview\",\n    value: function getPreview() {\n      return wp.element.createElement(ClustersBlockPreview, {\n        attributes: this.props.attributes,\n        setAttributes: this.props.setAttributes\n      });\n    }\n  }, {\n    key: \"getSettingsEditor\",\n    value: function getSettingsEditor() {\n      var _props5 = this.props,\n          attributes = _props5.attributes,\n          setAttributes = _props5.setAttributes;\n      var display = attributes.display,\n          display_setting = attributes.display_setting;\n\n\n      var update_display_callback = function update_display_callback(value) {\n        var needsFurtherSettings = [\"post\", \"page\", \"category\", \"tag\"];\n\n        if (display !== value) {\n          setAttributes({\n            display: value,\n            display_setting: [],\n            edit_mode: needsFurtherSettings.includes(value)\n          });\n        }\n      };\n\n      return wp.element.createElement(ClustersBlockSettingsEditor, {\n        attributes: attributes,\n        selected_display: display,\n        selected_display_setting: display_setting,\n        update_display_callback: update_display_callback,\n        update_display_setting_callback: function update_display_setting_callback(value) {\n          return setAttributes({ display_setting: value });\n        },\n        done_callback: function done_callback() {\n          return setAttributes({ edit_mode: false });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var attributes = this.props.attributes;\n      var edit_mode = attributes.edit_mode;\n\n\n      return [this.getInspectorControls(), this.getToolbarControls(), edit_mode ? this.getSettingsEditor() : this.getPreview()];\n    }\n  }]);\n\n  return ClustersBlock;\n}(React.Component);\n\nvar OrbitalPopover = function (_React$Component9) {\n  _inherits(OrbitalPopover, _React$Component9);\n\n  function OrbitalPopover(props) {\n    var _ref3;\n\n    _classCallCheck(this, OrbitalPopover);\n\n    var _this11 = _possibleConstructorReturn(this, (_ref3 = OrbitalPopover.__proto__ || Object.getPrototypeOf(OrbitalPopover)).call.apply(_ref3, [this].concat(_toConsumableArray(props))));\n\n    _this11.onChangeURL = _this11.onChangeURL.bind(_this11);\n    _this11.openURLPopover = _this11.openURLPopover.bind(_this11);\n    _this11.closeURLPopover = _this11.closeURLPopover.bind(_this11);\n\n    _this11.state = {\n      isVisible: false,\n      isNoFollow: false,\n      isTargetBlank: false,\n      isEnableButton: true\n    };\n    return _this11;\n  }\n\n  _createClass(OrbitalPopover, [{\n    key: \"onChangeURL\",\n    value: function onChangeURL(url) {\n      this.setState({ url: url });\n    }\n  }, {\n    key: \"openURLPopover\",\n    value: function openURLPopover() {\n      if (!this.state.isVisible) {\n        this.setState({ isVisible: true });\n      } else {\n        this.setState({ isVisible: false });\n      }\n    }\n  }, {\n    key: \"closeURLPopover\",\n    value: function closeURLPopover(event) {\n      if (event.target.className != \"editor-url-input__suggestion\") {\n        if (this.state.isVisible) {\n          this.setState({ isVisible: false });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this12 = this;\n\n      var _props6 = this.props,\n          attributes = _props6.attributes,\n          setAttributes = _props6.setAttributes,\n          cluster = _props6.cluster;\n      var settings = attributes.settings,\n          links = attributes.links,\n          target = attributes.target;\n      var _state = this.state,\n          url = _state.url,\n          isVisible = _state.isVisible,\n          isEditing = _state.isEditing,\n          isNoFollow = _state.isNoFollow,\n          isTargetBlank = _state.isTargetBlank,\n          isEnableButton = _state.isEnableButton;\n\n      var settingsJson = JSON.parse(settings);\n\n      var noFollowToggle = function noFollowToggle() {\n        if (settingsJson[cluster]) {\n          if (settingsJson[cluster][\"nofollow\"] == true) {\n            settingsJson[cluster][\"nofollow\"] = false;\n            _this12.setState({ isNoFollow: false });\n          } else {\n            settingsJson[cluster][\"nofollow\"] = true;\n            _this12.setState({ isNoFollow: true });\n          }\n        } else {\n          settingsJson[cluster] = {\n            nofollow: true\n          };\n\n          _this12.setState({ isNoFollow: true });\n        }\n\n        setAttributes({ settings: JSON.stringify(settingsJson, null) });\n      };\n\n      var targetToggle = function targetToggle() {\n        if (settingsJson[cluster]) {\n          if (settingsJson[cluster][\"target\"] == true) {\n            settingsJson[cluster][\"target\"] = false;\n            _this12.setState({ isTargetBlank: false });\n          } else {\n            settingsJson[cluster][\"target\"] = true;\n            _this12.setState({ isTargetBlank: true });\n          }\n        } else {\n          settingsJson[cluster] = {\n            target: true\n          };\n\n          _this12.setState({ isTargetBlank: true });\n        }\n\n        setAttributes({ settings: JSON.stringify(settingsJson, null) });\n      };\n\n      var enableButtonToggle = function enableButtonToggle() {\n        if (settingsJson[cluster]) {\n          if (settingsJson[cluster][\"enableButton\"] == true) {\n            settingsJson[cluster][\"enableButton\"] = false;\n            _this12.setState({ isEnableButton: false });\n          } else {\n            settingsJson[cluster][\"enableButton\"] = true;\n            _this12.setState({ isEnableButton: true });\n          }\n        } else {\n          settingsJson[cluster] = {\n            enableButton: true\n          };\n\n          _this12.setState({ isEnableButton: true });\n        }\n\n        setAttributes({ settings: JSON.stringify(settingsJson, null) });\n      };\n\n      var isTargetBlankToggle = function isTargetBlankToggle() {\n        if (settingsJson[cluster]) {\n          if (settingsJson[cluster][\"target\"] === true) {\n            return true;\n          } else if (settingsJson[cluster][\"target\"] === false) return false;\n        } else {\n          if (target == \"_blank\") {\n            return true;\n          } else {\n            return false;\n          }\n        }\n        return false;\n      };\n\n      var isEnableButtonToggle = function isEnableButtonToggle() {\n        if (settingsJson[cluster]) {\n          if (settingsJson[cluster][\"enableButton\"] === true) {\n            return true;\n          } else if (settingsJson[cluster][\"enableButton\"] === false) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n\n      var isNoFollowToggle = function isNoFollowToggle() {\n        if (settingsJson[cluster]) {\n          if (settingsJson[cluster][\"nofollow\"] === true) {\n            return true;\n          } else if (settingsJson[cluster][\"nofollow\"] === false) {\n            return false;\n          }\n        } else {\n          if (links == \"nofollow\") {\n            return true;\n          } else {\n            return false;\n          }\n        }\n        return false;\n      };\n\n      var changeURLInput = function changeURLInput(url, post) {\n        if (settingsJson[cluster]) {\n          settingsJson[cluster][\"link\"] = url;\n        } else {\n          settingsJson[cluster] = {\n            link: url\n          };\n        }\n\n        setAttributes({ settings: JSON.stringify(settingsJson, null) });\n      };\n\n      var changeButtonText = function changeButtonText(text) {\n        if (settingsJson[cluster]) {\n          settingsJson[cluster][\"button\"] = text;\n        } else {\n          settingsJson[cluster] = {\n            button: text\n          };\n        }\n\n        setAttributes({ settings: JSON.stringify(settingsJson, null) });\n      };\n\n      return wp.element.createElement(\n        \"div\",\n        { className: \"orbital-clusters-url-editor\" },\n        wp.element.createElement(Button, {\n          className: \"components-toolbar__control\",\n          label: __(\"Link Settings\", \"hostinger-affiliate-theme\"),\n          icon: \"admin-generic\",\n          onClick: this.openURLPopover\n        }),\n        isVisible && wp.element.createElement(\n          Popover,\n          {\n            position: \"bottom\",\n            className: \"orbital-clusters-popover\",\n            onClickOutside: this.closeURLPopover\n          },\n          wp.element.createElement(URLInput, {\n            value: settingsJson[cluster] ? settingsJson[cluster].link != \"undefined\" ? settingsJson[cluster].link : null : null,\n            __nextHasNoMarginBottom: true,\n            onChange: changeURLInput\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __(\"No Follow\", \"hostinger-affiliate-theme\"),\n            onChange: noFollowToggle,\n            checked: isNoFollowToggle() ? true : false\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __(\"Open in new tab\", \"hostinger-affiliate-theme\"),\n            onChange: targetToggle,\n            checked: isTargetBlankToggle() ? true : false\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __(\"Enable Button\", \"hostinger-affiliate-theme\"),\n            onChange: enableButtonToggle,\n            checked: isEnableButtonToggle() ? true : false\n          }),\n          wp.element.createElement(TextControl, {\n            label: __(\"Button\", \"hostinger-affiliate-theme\"),\n            value: settingsJson[cluster] ? settingsJson[cluster].button != \"undefined\" ? settingsJson[cluster].button : null : null,\n            onChange: changeButtonText\n          })\n        )\n      );\n    }\n  }]);\n\n  return OrbitalPopover;\n}(React.Component);\n\n/*\n *\tREGISTER BLOCK\n */\n\nregisterBlockType(\"orbital/cluster\", {\n  title: __(\"Cluster\", \"hostinger-affiliate-theme\"),\n  icon: \"grid-view\",\n  category: \"orbital\",\n  description: __(\"Display a grid of clusters from a variety of sources.\", \"hostinger-affiliate-theme\"),\n  supports: {\n    html: false\n  },\n  attributes: {\n    columns: {\n      type: \"number\",\n      default: 3\n    },\n    rows: {\n      type: \"number\",\n      default: 9\n    },\n    display: {\n      type: \"string\",\n      default: \"\"\n    },\n    display_setting: {\n      type: \"array\",\n      default: []\n    },\n    orderby: {\n      type: \"string\",\n      default: \"date\"\n    },\n    excerpt: {\n      type: \"string\",\n      default: \"default\"\n    },\n    links: {\n      type: \"string\",\n      default: \"follow\"\n    },\n    target: {\n      type: \"string\",\n      default: \"_self\"\n    },\n    thumbnailSize: {\n      type: \"string\",\n      default: \"thumbnail-center\"\n    },\n    button: {\n      type: \"string\",\n      default: \"\"\n    },\n    featured: {\n      type: \"number\",\n      default: 0\n    },\n    settings: {\n      type: \"string\",\n      default: \"{}\"\n    },\n    edit_mode: {\n      type: \"boolean\",\n      default: true\n    }\n  },\n\n  edit: function edit(props) {\n    return wp.element.createElement(ClustersBlock, props);\n  },\n  save: function save(props) {\n    return null;\n  },\n\n\n  deprecated: [{\n    attributes: {\n      columns: {\n        type: \"number\",\n        default: 3\n      },\n      rows: {\n        type: \"number\",\n        default: 9\n      },\n      display: {\n        type: \"string\",\n        default: \"\"\n      },\n      display_setting: {\n        type: \"array\",\n        default: []\n      },\n      orderby: {\n        type: \"string\",\n        default: \"date\"\n      },\n      excerpt: {\n        type: \"string\",\n        default: \"default\"\n      },\n      links: {\n        type: \"string\",\n        default: \"follow\"\n      },\n      target: {\n        type: \"string\",\n        default: \"_self\"\n      },\n      featured: {\n        type: \"number\",\n        default: 0\n      },\n      settings: {\n        type: \"string\",\n        default: \"{}\"\n      },\n      edit_mode: {\n        type: \"boolean\",\n        default: true\n      }\n    },\n\n    edit: function edit(props) {\n      return wp.element.createElement(ClustersBlock, props);\n    },\n    save: function save(props) {\n      var _props$attributes3 = props.attributes,\n          rows = _props$attributes3.rows,\n          columns = _props$attributes3.columns,\n          display = _props$attributes3.display,\n          display_setting = _props$attributes3.display_setting,\n          orderby = _props$attributes3.orderby,\n          excerpt = _props$attributes3.excerpt,\n          links = _props$attributes3.links,\n          featured = _props$attributes3.featured,\n          thumbnailSize = _props$attributes3.thumbnailSize;\n\n\n      var shortcode_atts = new Map();\n\n      shortcode_atts.set(\"columns\", columns);\n\n      if (excerpt) {\n        shortcode_atts.set(\"excerpt\", excerpt);\n      }\n\n      if (links) {\n        shortcode_atts.set(\"links\", links);\n      }\n\n      if (featured) {\n        shortcode_atts.set(\"featured\", featured);\n      }\n\n      if (thumbnailSize) {\n        shortcode_atts.set(\"thumbnailSize\", thumbnailSize);\n      }\n\n      if (\"page\" !== display || \"post\" !== display) {\n        shortcode_atts.set(\"postperpage\", rows);\n      }\n\n      if (\"page\" === display || \"post\" === display) {\n        shortcode_atts.set(\"pages\", display_setting.join(\",\"));\n      } else if (\"pilar\" === display) {\n        shortcode_atts.set(\"pilar\", \"true\");\n      } else if (\"category\" === display) {\n        shortcode_atts.set(\"categories\", display_setting.join(\",\"));\n      } else if (\"tag\" === display) {\n        shortcode_atts.set(\"tags\", display_setting.join(\",\"));\n      }\n\n      if (supportsOrderby(display)) {\n        if (\"rand\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"rand\");\n        } else if (\"id_asc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"id\");\n          shortcode_atts.set(\"order\", \"ASC\");\n        } else if (\"id_desc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"id\");\n          shortcode_atts.set(\"order\", \"DESC\");\n        } else if (\"title_asc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"title\");\n          shortcode_atts.set(\"order\", \"ASC\");\n        } else if (\"title_desc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"title\");\n          shortcode_atts.set(\"order\", \"DESC\");\n        } else if (\"name_asc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"name\");\n          shortcode_atts.set(\"order\", \"ASC\");\n        } else if (\"name_desc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"name\");\n          shortcode_atts.set(\"order\", \"DESC\");\n        } else if (\"date_asc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"date\");\n          shortcode_atts.set(\"order\", \"ASC\");\n        } else if (\"date_desc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"date\");\n          shortcode_atts.set(\"order\", \"DESC\");\n        } else if (\"modified_asc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"modified\");\n          shortcode_atts.set(\"order\", \"ASC\");\n        } else if (\"modified_desc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"modified\");\n          shortcode_atts.set(\"order\", \"DESC\");\n        } else if (\"parent_asc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"parent\");\n          shortcode_atts.set(\"order\", \"ASC\");\n        } else if (\"parent_desc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"parent\");\n          shortcode_atts.set(\"order\", \"DESC\");\n        } else if (\"menu_order_asc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"menu_order\");\n          shortcode_atts.set(\"order\", \"ASC\");\n        } else if (\"menu_order_desc\" === orderby) {\n          shortcode_atts.set(\"orderby\", \"menu_order\");\n          shortcode_atts.set(\"order\", \"DESC\");\n        } else if (\"comment_count_asc\" === orderby) {\n          shortcode_atts.set(\"order\", \"ASC\");\n        } else if (\"comment_count_desc\" === orderby) {\n          shortcode_atts.set(\"order\", \"DESC\");\n        }\n      }\n\n      var shortcode = \"[orbital_cluster \";\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = shortcode_atts[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _ref4 = _step6.value;\n\n          var _ref5 = _slicedToArray(_ref4, 2);\n\n          var key = _ref5[0];\n          var value = _ref5[1];\n\n          shortcode += \" \" + key + '=\"' + value + '\"';\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      shortcode += \"]\";\n\n      return wp.element.createElement(\n        RawHTML,\n        null,\n        shortcode\n      );\n    }\n  }]\n});\n\n//# sourceURL=webpack:///./src/cluster/clusters-block.jsx?");

			/***/ }),

		/***/ "./src/cluster/views/category-select.jsx":
		/*!***********************************************!*\
		  !*** ./src/cluster/views/category-select.jsx ***!
		  \***********************************************/
		/*! no static exports found */
		/***/ (function(module, exports, __webpack_require__) {

			"use strict";
			eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar __ = wp.i18n.__;\nvar _wp$components = wp.components,\n    Toolbar = _wp$components.Toolbar,\n    Dropdown = _wp$components.Dropdown,\n    Dashicon = _wp$components.Dashicon;\nvar _wp = wp,\n    apiFetch = _wp.apiFetch;\n\nvar ClustersCategorySelect = exports.ClustersCategorySelect = function (_React$Component) {\n  _inherits(ClustersCategorySelect, _React$Component);\n\n  function ClustersCategorySelect(props) {\n    _classCallCheck(this, ClustersCategorySelect);\n\n    var _this = _possibleConstructorReturn(this, (ClustersCategorySelect.__proto__ || Object.getPrototypeOf(ClustersCategorySelect)).call(this, props));\n\n    _this.state = {\n      selectedCategories: props.selected_display_setting,\n      openAccordion: [],\n      filterQuery: \"\",\n      firstLoad: true\n    };\n\n    _this.checkboxChange = _this.checkboxChange.bind(_this);\n    _this.accordionToggle = _this.accordionToggle.bind(_this);\n    _this.filterResults = _this.filterResults.bind(_this);\n    _this.setFirstLoad = _this.setFirstLoad.bind(_this);\n    return _this;\n  }\n\n  _createClass(ClustersCategorySelect, [{\n    key: \"checkboxChange\",\n    value: function checkboxChange(checked, categories) {\n      var selectedCategories = this.state.selectedCategories;\n\n      selectedCategories = selectedCategories.filter(function (category) {\n        return !categories.includes(category);\n      });\n\n      if (checked) {\n        var _selectedCategories;\n\n        (_selectedCategories = selectedCategories).push.apply(_selectedCategories, _toConsumableArray(categories));\n      }\n\n      this.setState({\n        selectedCategories: selectedCategories\n      });\n\n      this.props.update_display_setting_callback(selectedCategories);\n    }\n  }, {\n    key: \"accordionToggle\",\n    value: function accordionToggle(category) {\n      var openAccordions = this.state.openAccordion;\n\n      if (openAccordions.includes(category)) {\n        openAccordions = openAccordions.filter(function (c) {\n          return c !== category;\n        });\n      } else {\n        openAccordions.push(category);\n      }\n\n      this.setState({\n        openAccordion: openAccordions\n      });\n    }\n  }, {\n    key: \"filterResults\",\n    value: function filterResults(evt) {\n      this.setState({\n        filterQuery: evt.target.value\n      });\n    }\n  }, {\n    key: \"setFirstLoad\",\n    value: function setFirstLoad(loaded) {\n      this.setState({\n        firstLoad: !!loaded\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return wp.element.createElement(\n        \"div\",\n        { className: \"orbital-clusters-list-card orbital-clusters-list-card--taxonomy orbital-clusters-list-card--taxonomy-category\" },\n        wp.element.createElement(ProductCategoryFilter, { filterResults: this.filterResults }),\n        wp.element.createElement(ProductCategoryList, {\n          filterQuery: this.state.filterQuery,\n          selectedCategories: this.state.selectedCategories,\n          checkboxChange: this.checkboxChange,\n          accordionToggle: this.accordionToggle,\n          openAccordion: this.state.openAccordion,\n          firstLoad: this.state.firstLoad,\n          setFirstLoad: this.setFirstLoad\n        })\n      );\n    }\n  }]);\n\n  return ClustersCategorySelect;\n}(React.Component);\n\nvar ProductCategoryFilter = function ProductCategoryFilter(_ref) {\n  var filterResults = _ref.filterResults;\n\n  return wp.element.createElement(\n    \"div\",\n    { className: \"orbital-clusters-list-card__input-wrapper\" },\n    wp.element.createElement(Dashicon, { icon: \"search\" }),\n    wp.element.createElement(\"input\", {\n      className: \"orbital-clusters-list-card__search\",\n      type: \"search\",\n      placeholder: __(\"Search for categories\", \"hostinger-affiliate-theme\"),\n      onChange: filterResults\n    })\n  );\n};\n\nvar ProductCategoryList = function (_React$Component2) {\n  _inherits(ProductCategoryList, _React$Component2);\n\n  function ProductCategoryList(props) {\n    _classCallCheck(this, ProductCategoryList);\n\n    var _this2 = _possibleConstructorReturn(this, (ProductCategoryList.__proto__ || Object.getPrototypeOf(ProductCategoryList)).call(this, props));\n\n    _this2.state = {\n      categories: [],\n      loaded: false,\n      query: \"\"\n    };\n\n    _this2.updatePreview = _this2.updatePreview.bind(_this2);\n    _this2.getQuery = _this2.getQuery.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(ProductCategoryList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.getQuery() !== this.state.query) {\n        this.updatePreview();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.getQuery() !== this.state.query && this.state.loaded) {\n        this.updatePreview();\n      }\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      var endpoint = \"/wp/v2/categories?per_page=-1\";\n      return endpoint;\n    }\n  }, {\n    key: \"updatePreview\",\n    value: function updatePreview() {\n      var self = this;\n      var query = this.getQuery();\n\n      self.setState({\n        loaded: false\n      });\n\n      apiFetch({ path: query }).then(function (categories) {\n        self.setState({\n          categories: categories,\n          loaded: true,\n          query: query\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          filterQuery = _props.filterQuery,\n          selectedCategories = _props.selectedCategories,\n          checkboxChange = _props.checkboxChange,\n          accordionToggle = _props.accordionToggle,\n          openAccordion = _props.openAccordion,\n          firstLoad = _props.firstLoad,\n          setFirstLoad = _props.setFirstLoad;\n\n\n      if (!this.state.loaded) {\n        return __(\"Loading\", \"hostinger-affiliate-theme\");\n      }\n\n      if (0 === this.state.categories.length) {\n        return __(\"No categories found\", \"hostinger-affiliate-theme\");\n      }\n\n      var handleCategoriesToCheck = function handleCategoriesToCheck(evt, parent, categories) {\n        var ids = getCategoryChildren(parent, categories).map(function (category) {\n          return category.id;\n        });\n\n        ids.push(parent.id);\n\n        checkboxChange(evt.target.checked, ids);\n      };\n\n      var getCategoryChildren = function getCategoryChildren(parent, categories) {\n        var children = [];\n\n        categories.filter(function (category) {\n          return category.parent === parent.id;\n        }).forEach(function (category) {\n          children.push(category);\n          children.push.apply(children, _toConsumableArray(getCategoryChildren(category, categories)));\n        });\n\n        return children;\n      };\n\n      var categoryHasChildren = function categoryHasChildren(parent, categories) {\n        return !!getCategoryChildren(parent, categories).length;\n      };\n\n      var isIndeterminate = function isIndeterminate(category, categories) {\n        if (selectedCategories.includes(category.id)) {\n          return false;\n        }\n\n        var children = getCategoryChildren(category, categories).map(function (category) {\n          return category.id;\n        });\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var child = _step.value;\n\n            if (selectedCategories.includes(child)) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return false;\n      };\n\n      var AccordionButton = function AccordionButton(_ref2) {\n        var category = _ref2.category,\n            categories = _ref2.categories;\n\n        var icon = \"arrow-down-alt2\";\n\n        if (openAccordion.includes(category.id)) {\n          icon = \"arrow-up-alt2\";\n        }\n\n        var style = null;\n\n        if (!categoryHasChildren(category, categories)) {\n          style = {\n            visibility: \"hidden\"\n          };\n        }\n\n        return wp.element.createElement(\n          \"button\",\n          {\n            onClick: function onClick() {\n              return accordionToggle(category.id);\n            },\n            className: \"orbital-clusters-list-card__accordion-button\",\n            style: style,\n            type: \"button\"\n          },\n          wp.element.createElement(Dashicon, { icon: icon })\n        );\n      };\n\n      var CategoryTree = function CategoryTree(_ref3) {\n        var categories = _ref3.categories,\n            parent = _ref3.parent;\n\n        var filteredCategories = categories.filter(function (category) {\n          return category.parent === parent;\n        });\n        if (firstLoad && selectedCategories.length > 0) {\n          categoriesData.filter(function (category) {\n            return category.parent === 0;\n          }).forEach(function (category) {\n            var children = getCategoryChildren(category, categoriesData);\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var child = _step2.value;\n\n                if (selectedCategories.includes(child.id) && !openAccordion.includes(category.id)) {\n                  accordionToggle(category.id);\n                  break;\n                }\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          });\n\n          setFirstLoad(false);\n        }\n\n        return filteredCategories.length > 0 && wp.element.createElement(\n          \"ul\",\n          null,\n          filteredCategories.map(function (category) {\n            return wp.element.createElement(\n              \"li\",\n              {\n                key: category.id,\n                className: openAccordion.includes(category.id) ? \"orbital-clusters-list-card__item orbital-clusters-list-card__accordion-open\" : \"orbital-clusters-list-card__item\"\n              },\n              wp.element.createElement(\n                \"label\",\n                {\n                  className: 0 === category.parent ? \"orbital-clusters-list-card__content\" : \"\",\n                  htmlFor: \"product-category-\" + category.id\n                },\n                wp.element.createElement(\"input\", {\n                  type: \"checkbox\",\n                  id: \"product-category-\" + category.id,\n                  value: category.id,\n                  checked: selectedCategories.includes(category.id),\n                  onChange: function onChange(evt) {\n                    return handleCategoriesToCheck(evt, category, categories);\n                  },\n                  ref: function ref(el) {\n                    return el && (el.indeterminate = isIndeterminate(category, categories));\n                  }\n                }),\n                \" \",\n                category.name,\n                0 === category.parent && wp.element.createElement(AccordionButton, {\n                  category: category,\n                  categories: categories\n                }),\n                wp.element.createElement(\n                  \"span\",\n                  { className: \"orbital-clusters-list-card__taxonomy-count\" },\n                  category.count\n                )\n              ),\n              wp.element.createElement(CategoryTree, { categories: categories, parent: category.id })\n            );\n          })\n        );\n      };\n\n      var categoriesData = this.state.categories;\n\n      if (\"\" !== filterQuery) {\n        categoriesData = categoriesData.filter(function (category) {\n          return category.slug.includes(filterQuery.toLowerCase());\n        });\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        { className: \"orbital-clusters-list-card__results\" },\n        wp.element.createElement(CategoryTree, { categories: categoriesData, parent: 0 })\n      );\n    }\n  }]);\n\n  return ProductCategoryList;\n}(React.Component);\n\n//# sourceURL=webpack:///./src/cluster/views/category-select.jsx?");

			/***/ }),

		/***/ "./src/cluster/views/page-select.jsx":
		/*!*******************************************!*\
		  !*** ./src/cluster/views/page-select.jsx ***!
		  \*******************************************/
		/*! no static exports found */
		/***/ (function(module, exports, __webpack_require__) {

			"use strict";
			eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar __ = wp.i18n.__;\nvar _wp$components = wp.components,\n    Toolbar = _wp$components.Toolbar,\n    Dropdown = _wp$components.Dropdown,\n    Dashicon = _wp$components.Dashicon;\nvar _wp = wp,\n    apiFetch = _wp.apiFetch;\n\n\nvar PAGE_DATA = {};\n\nvar ClustersPageSelect = exports.ClustersPageSelect = function (_React$Component) {\n  _inherits(ClustersPageSelect, _React$Component);\n\n  function ClustersPageSelect(props) {\n    _classCallCheck(this, ClustersPageSelect);\n\n    var _this = _possibleConstructorReturn(this, (ClustersPageSelect.__proto__ || Object.getPrototypeOf(ClustersPageSelect)).call(this, props));\n\n    _this.state = {\n      selectedPages: props.selected_display_setting || []\n    };\n    return _this;\n  }\n\n  _createClass(ClustersPageSelect, [{\n    key: \"addOrRemovePage\",\n    value: function addOrRemovePage(id) {\n      var selectedPages = this.state.selectedPages;\n\n      if (!selectedPages.includes(id)) {\n        selectedPages.push(id);\n      } else {\n        selectedPages = selectedPages.filter(function (page) {\n          return page !== id;\n        });\n      }\n\n      this.setState({\n        selectedPages: selectedPages\n      });\n\n      this.props.update_display_setting_callback(selectedPages.slice());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return wp.element.createElement(\n        \"div\",\n        { className: \"orbital-clusters-list-card orbital-clusters-list-card--specific\" },\n        wp.element.createElement(PagesSpecificSearchField, {\n          addOrRemovePageCallback: this.addOrRemovePage.bind(this),\n          selectedPages: this.state.selectedPages\n        }),\n        wp.element.createElement(PageSpecificSelectedPages, {\n          columns: this.props.attributes.columns,\n          pageIds: this.state.selectedPages,\n          addOrRemovePage: this.addOrRemovePage.bind(this)\n        })\n      );\n    }\n  }]);\n\n  return ClustersPageSelect;\n}(React.Component);\n\nvar PagesSpecificSearchField = function (_React$Component2) {\n  _inherits(PagesSpecificSearchField, _React$Component2);\n\n  function PagesSpecificSearchField(props) {\n    _classCallCheck(this, PagesSpecificSearchField);\n\n    var _this2 = _possibleConstructorReturn(this, (PagesSpecificSearchField.__proto__ || Object.getPrototypeOf(PagesSpecificSearchField)).call(this, props));\n\n    _this2.state = {\n      searchText: \"\",\n      dropdownOpen: false\n    };\n\n    _this2.updateSearchResults = _this2.updateSearchResults.bind(_this2);\n    _this2.setWrapperRef = _this2.setWrapperRef.bind(_this2);\n    _this2.handleClickOutside = _this2.handleClickOutside.bind(_this2);\n    _this2.isDropdownOpen = _this2.isDropdownOpen.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(PagesSpecificSearchField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n  }, {\n    key: \"setWrapperRef\",\n    value: function setWrapperRef(node) {\n      this.wrapperRef = node;\n    }\n  }, {\n    key: \"handleClickOutside\",\n    value: function handleClickOutside(evt) {\n      if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n        this.setState({\n          searchText: \"\"\n        });\n      }\n    }\n  }, {\n    key: \"isDropdownOpen\",\n    value: function isDropdownOpen(isOpen) {\n      this.setState({\n        dropdownOpen: !!isOpen\n      });\n    }\n  }, {\n    key: \"updateSearchResults\",\n    value: function updateSearchResults(evt) {\n      this.setState({\n        searchText: evt.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var divClass = \"orbital-clusters-list-card__search-wrapper\";\n\n      return wp.element.createElement(\n        \"div\",\n        {\n          className: divClass + (this.state.dropdownOpen ? \" \" + divClass + \"--with-results\" : \"\"),\n          ref: this.setWrapperRef\n        },\n        wp.element.createElement(\n          \"div\",\n          { className: \"orbital-clusters-list-card__input-wrapper\" },\n          wp.element.createElement(Dashicon, { icon: \"search\" }),\n          wp.element.createElement(\"input\", {\n            type: \"search\",\n            className: \"orbital-clusters-list-card__search\",\n            value: this.state.searchText,\n            placeholder: __(\"Search for pages to display\", \"hostinger-affiliate-theme\"),\n            onChange: this.updateSearchResults\n          })\n        ),\n        wp.element.createElement(PageSpecificSearchResults, {\n          searchString: this.state.searchText,\n          addOrRemovePageCallback: this.props.addOrRemovePageCallback,\n          selectedPages: this.props.selectedPages,\n          isDropdownOpenCallback: this.isDropdownOpen\n        })\n      );\n    }\n  }]);\n\n  return PagesSpecificSearchField;\n}(React.Component);\n\nvar PageSpecificSearchResults = function (_React$Component3) {\n  _inherits(PageSpecificSearchResults, _React$Component3);\n\n  function PageSpecificSearchResults(props) {\n    _classCallCheck(this, PageSpecificSearchResults);\n\n    var _this3 = _possibleConstructorReturn(this, (PageSpecificSearchResults.__proto__ || Object.getPrototypeOf(PageSpecificSearchResults)).call(this, props));\n\n    _this3.state = {\n      pages: [],\n      query: \"\",\n      loaded: false\n    };\n\n    _this3.updateResults = _this3.updateResults.bind(_this3);\n    _this3.getQuery = _this3.getQuery.bind(_this3);\n    return _this3;\n  }\n\n  _createClass(PageSpecificSearchResults, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateResults();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.getQuery() !== this.state.query) {\n        this.updateResults();\n      }\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      if (!this.props.searchString.length) {\n        return \"\";\n      }\n\n      return \"/wp/v2/pages?per_page=9&orderby=relevance&order=desc&type=any&search=\" + this.props.searchString + \"&_embed\";\n    }\n  }, {\n    key: \"updateResults\",\n    value: function updateResults() {\n      var self = this;\n      var query = this.getQuery();\n\n      self.setState({\n        query: query,\n        loaded: false\n      });\n\n      if (query.length) {\n        apiFetch({ path: query }).then(function (pages) {\n          if (query === self.getQuery()) {\n            self.setState({\n              pages: pages,\n              loaded: true\n            });\n          }\n        });\n      } else {\n        self.setState({\n          pages: [],\n          loaded: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.loaded || !this.state.query.length) {\n        return null;\n      }\n\n      if (0 === this.state.pages.length) {\n        return wp.element.createElement(\n          \"span\",\n          { className: \"orbital-clusters-list-card__search-no-results\" },\n          \" \",\n          __(\"No pages found\", \"hostinger-affiliate-theme\"),\n          \" \"\n        );\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.state.pages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var page = _step.value;\n\n          PAGE_DATA[page.id] = page;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return wp.element.createElement(PageSpecificSearchResultsDropdown, {\n        pages: this.state.pages,\n        addOrRemovePageCallback: this.props.addOrRemovePageCallback,\n        selectedPages: this.props.selectedPages,\n        isDropdownOpenCallback: this.props.isDropdownOpenCallback\n      });\n    }\n  }]);\n\n  return PageSpecificSearchResults;\n}(React.Component);\n\nvar PageSpecificSearchResultsDropdown = function (_React$Component4) {\n  _inherits(PageSpecificSearchResultsDropdown, _React$Component4);\n\n  function PageSpecificSearchResultsDropdown() {\n    _classCallCheck(this, PageSpecificSearchResultsDropdown);\n\n    return _possibleConstructorReturn(this, (PageSpecificSearchResultsDropdown.__proto__ || Object.getPrototypeOf(PageSpecificSearchResultsDropdown)).apply(this, arguments));\n  }\n\n  _createClass(PageSpecificSearchResultsDropdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.isDropdownOpenCallback(true);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.isDropdownOpenCallback(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          pages = _props.pages,\n          addOrRemovePageCallback = _props.addOrRemovePageCallback,\n          selectedPages = _props.selectedPages;\n\n\n      var pageElements = [];\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = pages[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var page = _step2.value;\n\n          pageElements.push(wp.element.createElement(PageSpecificSearchResultsDropdownElement, {\n            page: page,\n            addOrRemovePageCallback: addOrRemovePageCallback,\n            selected: selectedPages.includes(page.id)\n          }));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        {\n          role: \"menu\",\n          className: \"orbital-clusters-list-card__search-results\",\n          \"aria-orientation\": \"vertical\",\n          \"aria-label\": __(\"Pages list\", \"hostinger-affiliate-theme\")\n        },\n        wp.element.createElement(\n          \"div\",\n          null,\n          pageElements\n        )\n      );\n    }\n  }]);\n\n  return PageSpecificSearchResultsDropdown;\n}(React.Component);\n\nvar PageSpecificSearchResultsDropdownElement = function (_React$Component5) {\n  _inherits(PageSpecificSearchResultsDropdownElement, _React$Component5);\n\n  function PageSpecificSearchResultsDropdownElement(props) {\n    _classCallCheck(this, PageSpecificSearchResultsDropdownElement);\n\n    var _this5 = _possibleConstructorReturn(this, (PageSpecificSearchResultsDropdownElement.__proto__ || Object.getPrototypeOf(PageSpecificSearchResultsDropdownElement)).call(this, props));\n\n    _this5.handleClick = _this5.handleClick.bind(_this5);\n    return _this5;\n  }\n\n  _createClass(PageSpecificSearchResultsDropdownElement, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.props.addOrRemovePageCallback(this.props.page.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var page = this.props.page;\n\n      var icon = this.props.selected ? wp.element.createElement(Dashicon, { icon: \"yes\" }) : null;\n      var image = null;\n      if (typeof page[\"_embedded\"][\"wp:featuredmedia\"] != \"undefined\") {\n        image = wp.element.createElement(\"img\", { src: page[\"_embedded\"][\"wp:featuredmedia\"][\"0\"].source_url });\n      }\n      return wp.element.createElement(\n        \"div\",\n        {\n          className: \"orbital-clusters-list-card__content\" + (this.props.selected ? \" orbital-clusters-list-card__content--added\" : \"\"),\n          onClick: this.handleClick\n        },\n        image,\n        wp.element.createElement(\n          \"span\",\n          { className: \"orbital-clusters-list-card__content-item-name\" },\n          page.title.rendered\n        ),\n        icon\n      );\n    }\n  }]);\n\n  return PageSpecificSearchResultsDropdownElement;\n}(React.Component);\n\nvar PageSpecificSelectedPages = function (_React$Component6) {\n  _inherits(PageSpecificSelectedPages, _React$Component6);\n\n  function PageSpecificSelectedPages(props) {\n    _classCallCheck(this, PageSpecificSelectedPages);\n\n    var _this6 = _possibleConstructorReturn(this, (PageSpecificSelectedPages.__proto__ || Object.getPrototypeOf(PageSpecificSelectedPages)).call(this, props));\n\n    _this6.state = {\n      query: \"\",\n      loaded: false\n    };\n\n    _this6.updatePageCache = _this6.updatePageCache.bind(_this6);\n    _this6.getQuery = _this6.getQuery.bind(_this6);\n    return _this6;\n  }\n\n  _createClass(PageSpecificSelectedPages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageCache();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.loaded && this.getQuery() !== this.state.query) {\n        this.updatePageCache();\n      }\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      if (!this.props.pageIds.length) {\n        return \"\";\n      }\n\n      // Determine which pages are not already in the cache and only fetch uncached pages.\n      var uncachedPages = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.props.pageIds[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var pageId = _step3.value;\n\n          if (!PAGE_DATA.hasOwnProperty(pageId)) {\n            uncachedPages.push(pageId);\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return uncachedPages.length ? \"/wp/v2/pages?include=\" + uncachedPages.join(\",\") + \"&_embed\" : \"\";\n    }\n  }, {\n    key: \"updatePageCache\",\n    value: function updatePageCache() {\n      var self = this;\n      var query = this.getQuery();\n\n      self.setState({\n        query: query,\n        loaded: false\n      });\n\n      if (query.length) {\n        apiFetch({ path: query }).then(function (pages) {\n          if (pages.length) {\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n              for (var _iterator4 = pages[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var page = _step4.value;\n\n                PAGE_DATA[page.id] = page;\n              }\n            } catch (err) {\n              _didIteratorError4 = true;\n              _iteratorError4 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                  _iterator4.return();\n                }\n              } finally {\n                if (_didIteratorError4) {\n                  throw _iteratorError4;\n                }\n              }\n            }\n          }\n\n          self.setState({\n            loaded: true\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var pageElements = [];\n\n      var _loop = function _loop(pageId) {\n        if (!PAGE_DATA.hasOwnProperty(pageId)) {\n          return \"continue\";\n        }\n\n        var pageData = PAGE_DATA[pageId];\n        var image = null;\n        if (typeof pageData[\"_embedded\"][\"wp:featuredmedia\"] != \"undefined\") {\n          image = pageData[\"_embedded\"][\"wp:featuredmedia\"][\"0\"].source_url;\n        }\n\n        pageElements.push(wp.element.createElement(\n          \"li\",\n          {\n            className: \"orbital-clusters-list-card__item\",\n            key: pageData.id + \"-specific-select-edit\"\n          },\n          wp.element.createElement(\n            \"div\",\n            { className: \"orbital-clusters-list-card__content\" },\n            wp.element.createElement(\"img\", { src: image }),\n            wp.element.createElement(\n              \"span\",\n              { className: \"orbital-clusters-list-card__content-item-name\" },\n              pageData.title.rendered\n            ),\n            wp.element.createElement(\n              \"button\",\n              {\n                type: \"button\",\n                id: \"page-\" + pageData.id,\n                onClick: function onClick() {\n                  self.props.addOrRemovePage(pageData.id);\n                }\n              },\n              wp.element.createElement(Dashicon, { icon: \"no-alt\" })\n            )\n          )\n        ));\n      };\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.props.pageIds[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var pageId = _step5.value;\n\n          var _ret = _loop(pageId);\n\n          if (_ret === \"continue\") continue;\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        {\n          className: \"orbital-clusters-list-card__results-wrapper orbital-clusters-list-card__results-wrapper--cols-\" + this.props.columns\n        },\n        wp.element.createElement(\n          \"div\",\n          {\n            role: \"menu\",\n            className: \"orbital-clusters-list-card__results\",\n            \"aria-orientation\": \"vertical\",\n            \"aria-label\": __(\"Selected pages\", \"hostinger-affiliate-theme\")\n          },\n          pageElements.length > 0 && wp.element.createElement(\n            \"h3\",\n            null,\n            __(\"Selected pages\", \"hostinger-affiliate-theme\")\n          ),\n          wp.element.createElement(\n            \"ul\",\n            null,\n            pageElements\n          )\n        )\n      );\n    }\n  }]);\n\n  return PageSpecificSelectedPages;\n}(React.Component);\n\n//# sourceURL=webpack:///./src/cluster/views/page-select.jsx?");

			/***/ }),

		/***/ "./src/cluster/views/post-select.jsx":
		/*!*******************************************!*\
		  !*** ./src/cluster/views/post-select.jsx ***!
		  \*******************************************/
		/*! no static exports found */
		/***/ (function(module, exports, __webpack_require__) {

			"use strict";
			eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar __ = wp.i18n.__;\nvar _wp$components = wp.components,\n    Toolbar = _wp$components.Toolbar,\n    Dropdown = _wp$components.Dropdown,\n    Dashicon = _wp$components.Dashicon;\nvar _wp = wp,\n    apiFetch = _wp.apiFetch;\n\n\nvar POST_DATA = {};\n\nvar ClustersPostSelect = exports.ClustersPostSelect = function (_React$Component) {\n  _inherits(ClustersPostSelect, _React$Component);\n\n  function ClustersPostSelect(props) {\n    _classCallCheck(this, ClustersPostSelect);\n\n    var _this = _possibleConstructorReturn(this, (ClustersPostSelect.__proto__ || Object.getPrototypeOf(ClustersPostSelect)).call(this, props));\n\n    _this.state = {\n      selectedPosts: props.selected_display_setting || []\n    };\n    return _this;\n  }\n\n  _createClass(ClustersPostSelect, [{\n    key: \"addOrRemovePost\",\n    value: function addOrRemovePost(id) {\n      var selectedPosts = this.state.selectedPosts;\n\n      if (!selectedPosts.includes(id)) {\n        selectedPosts.push(id);\n      } else {\n        selectedPosts = selectedPosts.filter(function (post) {\n          return post !== id;\n        });\n      }\n\n      this.setState({\n        selectedPosts: selectedPosts\n      });\n\n      this.props.update_display_setting_callback(selectedPosts.slice());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return wp.element.createElement(\n        \"div\",\n        { className: \"orbital-clusters-list-card orbital-clusters-list-card--specific\" },\n        wp.element.createElement(PostsSpecificSearchField, {\n          addOrRemovePostCallback: this.addOrRemovePost.bind(this),\n          selectedPosts: this.state.selectedPosts\n        }),\n        wp.element.createElement(PostSpecificSelectedPosts, {\n          columns: this.props.attributes.columns,\n          postIds: this.state.selectedPosts,\n          addOrRemovePost: this.addOrRemovePost.bind(this)\n        })\n      );\n    }\n  }]);\n\n  return ClustersPostSelect;\n}(React.Component);\n\nvar PostsSpecificSearchField = function (_React$Component2) {\n  _inherits(PostsSpecificSearchField, _React$Component2);\n\n  function PostsSpecificSearchField(props) {\n    _classCallCheck(this, PostsSpecificSearchField);\n\n    var _this2 = _possibleConstructorReturn(this, (PostsSpecificSearchField.__proto__ || Object.getPrototypeOf(PostsSpecificSearchField)).call(this, props));\n\n    _this2.state = {\n      searchText: \"\",\n      dropdownOpen: false\n    };\n\n    _this2.updateSearchResults = _this2.updateSearchResults.bind(_this2);\n    _this2.setWrapperRef = _this2.setWrapperRef.bind(_this2);\n    _this2.handleClickOutside = _this2.handleClickOutside.bind(_this2);\n    _this2.isDropdownOpen = _this2.isDropdownOpen.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(PostsSpecificSearchField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n  }, {\n    key: \"setWrapperRef\",\n    value: function setWrapperRef(node) {\n      this.wrapperRef = node;\n    }\n  }, {\n    key: \"handleClickOutside\",\n    value: function handleClickOutside(evt) {\n      if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n        this.setState({\n          searchText: \"\"\n        });\n      }\n    }\n  }, {\n    key: \"isDropdownOpen\",\n    value: function isDropdownOpen(isOpen) {\n      this.setState({\n        dropdownOpen: !!isOpen\n      });\n    }\n  }, {\n    key: \"updateSearchResults\",\n    value: function updateSearchResults(evt) {\n      this.setState({\n        searchText: evt.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var divClass = \"orbital-clusters-list-card__search-wrapper\";\n\n      return wp.element.createElement(\n        \"div\",\n        {\n          className: divClass + (this.state.dropdownOpen ? \" \" + divClass + \"--with-results\" : \"\"),\n          ref: this.setWrapperRef\n        },\n        wp.element.createElement(\n          \"div\",\n          { className: \"orbital-clusters-list-card__input-wrapper\" },\n          wp.element.createElement(Dashicon, { icon: \"search\" }),\n          wp.element.createElement(\"input\", {\n            type: \"search\",\n            className: \"orbital-clusters-list-card__search\",\n            value: this.state.searchText,\n            placeholder: __(\"Search for posts to display\", \"hostinger-affiliate-theme\"),\n            onChange: this.updateSearchResults\n          })\n        ),\n        wp.element.createElement(PostSpecificSearchResults, {\n          searchString: this.state.searchText,\n          addOrRemovePostCallback: this.props.addOrRemovePostCallback,\n          selectedPosts: this.props.selectedPosts,\n          isDropdownOpenCallback: this.isDropdownOpen\n        })\n      );\n    }\n  }]);\n\n  return PostsSpecificSearchField;\n}(React.Component);\n\nvar PostSpecificSearchResults = function (_React$Component3) {\n  _inherits(PostSpecificSearchResults, _React$Component3);\n\n  function PostSpecificSearchResults(props) {\n    _classCallCheck(this, PostSpecificSearchResults);\n\n    var _this3 = _possibleConstructorReturn(this, (PostSpecificSearchResults.__proto__ || Object.getPrototypeOf(PostSpecificSearchResults)).call(this, props));\n\n    _this3.state = {\n      posts: [],\n      query: \"\",\n      loaded: false\n    };\n\n    _this3.updateResults = _this3.updateResults.bind(_this3);\n    _this3.getQuery = _this3.getQuery.bind(_this3);\n    return _this3;\n  }\n\n  _createClass(PostSpecificSearchResults, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateResults();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.getQuery() !== this.state.query) {\n        this.updateResults();\n      }\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      if (!this.props.searchString.length) {\n        return \"\";\n      }\n      return \"/wp/v2/posts?per_page=9&orderby=relevance&order=desc&type=any&search=\" + this.props.searchString + \"&_embed\";\n    }\n  }, {\n    key: \"updateResults\",\n    value: function updateResults() {\n      var self = this;\n      var query = this.getQuery();\n\n      self.setState({\n        query: query,\n        loaded: false\n      });\n\n      if (query.length) {\n        apiFetch({ path: query }).then(function (posts) {\n          if (query === self.getQuery()) {\n            self.setState({\n              posts: posts,\n              loaded: true\n            });\n          }\n        });\n      } else {\n        self.setState({\n          posts: [],\n          loaded: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.loaded || !this.state.query.length) {\n        return null;\n      }\n\n      if (0 === this.state.posts.length) {\n        return wp.element.createElement(\n          \"span\",\n          { className: \"orbital-clusters-list-card__search-no-results\" },\n          \" \",\n          __(\"No posts found\", \"hostinger-affiliate-theme\"),\n          \" \"\n        );\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.state.posts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var post = _step.value;\n\n          POST_DATA[post.id] = post;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return wp.element.createElement(PostSpecificSearchResultsDropdown, {\n        posts: this.state.posts,\n        addOrRemovePostCallback: this.props.addOrRemovePostCallback,\n        selectedPosts: this.props.selectedPosts,\n        isDropdownOpenCallback: this.props.isDropdownOpenCallback\n      });\n    }\n  }]);\n\n  return PostSpecificSearchResults;\n}(React.Component);\n\nvar PostSpecificSearchResultsDropdown = function (_React$Component4) {\n  _inherits(PostSpecificSearchResultsDropdown, _React$Component4);\n\n  function PostSpecificSearchResultsDropdown() {\n    _classCallCheck(this, PostSpecificSearchResultsDropdown);\n\n    return _possibleConstructorReturn(this, (PostSpecificSearchResultsDropdown.__proto__ || Object.getPrototypeOf(PostSpecificSearchResultsDropdown)).apply(this, arguments));\n  }\n\n  _createClass(PostSpecificSearchResultsDropdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.isDropdownOpenCallback(true);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.isDropdownOpenCallback(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          posts = _props.posts,\n          addOrRemovePostCallback = _props.addOrRemovePostCallback,\n          selectedPosts = _props.selectedPosts;\n\n\n      var postElements = [];\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = posts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var post = _step2.value;\n\n          postElements.push(wp.element.createElement(PostSpecificSearchResultsDropdownElement, {\n            post: post,\n            addOrRemovePostCallback: addOrRemovePostCallback,\n            selected: selectedPosts.includes(post.id)\n          }));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        {\n          role: \"menu\",\n          className: \"orbital-clusters-list-card__search-results\",\n          \"aria-orientation\": \"vertical\",\n          \"aria-label\": __(\"Posts list\", \"hostinger-affiliate-theme\")\n        },\n        wp.element.createElement(\n          \"div\",\n          null,\n          postElements\n        )\n      );\n    }\n  }]);\n\n  return PostSpecificSearchResultsDropdown;\n}(React.Component);\n\nvar PostSpecificSearchResultsDropdownElement = function (_React$Component5) {\n  _inherits(PostSpecificSearchResultsDropdownElement, _React$Component5);\n\n  function PostSpecificSearchResultsDropdownElement(props) {\n    _classCallCheck(this, PostSpecificSearchResultsDropdownElement);\n\n    var _this5 = _possibleConstructorReturn(this, (PostSpecificSearchResultsDropdownElement.__proto__ || Object.getPrototypeOf(PostSpecificSearchResultsDropdownElement)).call(this, props));\n\n    _this5.handleClick = _this5.handleClick.bind(_this5);\n    return _this5;\n  }\n\n  _createClass(PostSpecificSearchResultsDropdownElement, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.props.addOrRemovePostCallback(this.props.post.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post;\n      var icon = this.props.selected ? wp.element.createElement(Dashicon, { icon: \"yes\" }) : null;\n      var image = null;\n      if (typeof post[\"_embedded\"][\"wp:featuredmedia\"] != \"undefined\") {\n        image = wp.element.createElement(\"img\", { src: post[\"_embedded\"][\"wp:featuredmedia\"][\"0\"].source_url });\n      }\n      return wp.element.createElement(\n        \"div\",\n        {\n          className: \"orbital-clusters-list-card__content\" + (this.props.selected ? \" orbital-clusters-list-card__content--added\" : \"\"),\n          onClick: this.handleClick\n        },\n        image,\n        wp.element.createElement(\n          \"span\",\n          { className: \"orbital-clusters-list-card__content-item-name\" },\n          post.title.rendered\n        ),\n        icon\n      );\n    }\n  }]);\n\n  return PostSpecificSearchResultsDropdownElement;\n}(React.Component);\n\nvar PostSpecificSelectedPosts = function (_React$Component6) {\n  _inherits(PostSpecificSelectedPosts, _React$Component6);\n\n  function PostSpecificSelectedPosts(props) {\n    _classCallCheck(this, PostSpecificSelectedPosts);\n\n    var _this6 = _possibleConstructorReturn(this, (PostSpecificSelectedPosts.__proto__ || Object.getPrototypeOf(PostSpecificSelectedPosts)).call(this, props));\n\n    _this6.state = {\n      query: \"\",\n      loaded: false\n    };\n\n    _this6.updatePostCache = _this6.updatePostCache.bind(_this6);\n    _this6.getQuery = _this6.getQuery.bind(_this6);\n    return _this6;\n  }\n\n  _createClass(PostSpecificSelectedPosts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePostCache();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.loaded && this.getQuery() !== this.state.query) {\n        this.updatePostCache();\n      }\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      if (!this.props.postIds.length) {\n        return \"\";\n      }\n\n      // Determine which posts are not already in the cache and only fetch uncached posts.\n      var uncachedPosts = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.props.postIds[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var postId = _step3.value;\n\n          if (!POST_DATA.hasOwnProperty(postId)) {\n            uncachedPosts.push(postId);\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return uncachedPosts.length ? \"/wp/v2/posts?include=\" + uncachedPosts.join(\",\") + \"&_embed\" : \"\";\n    }\n  }, {\n    key: \"updatePostCache\",\n    value: function updatePostCache() {\n      var self = this;\n      var query = this.getQuery();\n\n      self.setState({\n        query: query,\n        loaded: false\n      });\n\n      if (query.length) {\n        apiFetch({ path: query }).then(function (posts) {\n          if (posts.length) {\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n              for (var _iterator4 = posts[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var post = _step4.value;\n\n                POST_DATA[post.id] = post;\n              }\n            } catch (err) {\n              _didIteratorError4 = true;\n              _iteratorError4 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                  _iterator4.return();\n                }\n              } finally {\n                if (_didIteratorError4) {\n                  throw _iteratorError4;\n                }\n              }\n            }\n          }\n\n          self.setState({\n            loaded: true\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var postElements = [];\n\n      var _loop = function _loop(postId) {\n        if (!POST_DATA.hasOwnProperty(postId)) {\n          return \"continue\";\n        }\n\n        var postData = POST_DATA[postId];\n        var image = null;\n        if (typeof postData[\"_embedded\"][\"wp:featuredmedia\"] != \"undefined\") {\n          image = postData[\"_embedded\"][\"wp:featuredmedia\"][\"0\"].source_url;\n        }\n\n        postElements.push(wp.element.createElement(\n          \"li\",\n          {\n            className: \"orbital-clusters-list-card__item\",\n            key: postData.id + \"-specific-select-edit\"\n          },\n          wp.element.createElement(\n            \"div\",\n            { className: \"orbital-clusters-list-card__content\" },\n            wp.element.createElement(\"img\", { src: image }),\n            wp.element.createElement(\n              \"span\",\n              { className: \"orbital-clusters-list-card__content-item-name\" },\n              postData.title.rendered\n            ),\n            wp.element.createElement(\n              \"button\",\n              {\n                type: \"button\",\n                id: \"post-\" + postData.id,\n                onClick: function onClick() {\n                  self.props.addOrRemovePost(postData.id);\n                }\n              },\n              wp.element.createElement(Dashicon, { icon: \"no-alt\" })\n            )\n          )\n        ));\n      };\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.props.postIds[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var postId = _step5.value;\n\n          var _ret = _loop(postId);\n\n          if (_ret === \"continue\") continue;\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        {\n          className: \"orbital-clusters-list-card__results-wrapper orbital-clusters-list-card__results-wrapper--cols-\" + this.props.columns\n        },\n        wp.element.createElement(\n          \"div\",\n          {\n            role: \"menu\",\n            className: \"orbital-clusters-list-card__results\",\n            \"aria-orientation\": \"vertical\",\n            \"aria-label\": __(\"Selected posts\", \"hostinger-affiliate-theme\")\n          },\n          postElements.length > 0 && wp.element.createElement(\n            \"h3\",\n            null,\n            __(\"Selected posts\", \"hostinger-affiliate-theme\")\n          ),\n          wp.element.createElement(\n            \"ul\",\n            null,\n            postElements\n          )\n        )\n      );\n    }\n  }]);\n\n  return PostSpecificSelectedPosts;\n}(React.Component);\n\n//# sourceURL=webpack:///./src/cluster/views/post-select.jsx?");

			/***/ }),

		/***/ "./src/cluster/views/tag-select.jsx":
		/*!******************************************!*\
		  !*** ./src/cluster/views/tag-select.jsx ***!
		  \******************************************/
		/*! no static exports found */
		/***/ (function(module, exports, __webpack_require__) {

			"use strict";
			eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar __ = wp.i18n.__;\nvar _wp$components = wp.components,\n    Toolbar = _wp$components.Toolbar,\n    Dropdown = _wp$components.Dropdown,\n    Dashicon = _wp$components.Dashicon;\nvar _wp = wp,\n    apiFetch = _wp.apiFetch;\n\nvar ClustersTagSelect = exports.ClustersTagSelect = function (_React$Component) {\n  _inherits(ClustersTagSelect, _React$Component);\n\n  function ClustersTagSelect(props) {\n    _classCallCheck(this, ClustersTagSelect);\n\n    var _this = _possibleConstructorReturn(this, (ClustersTagSelect.__proto__ || Object.getPrototypeOf(ClustersTagSelect)).call(this, props));\n\n    _this.state = {\n      selectedTags: props.selected_display_setting,\n      filterQuery: \"\",\n      firstLoad: true\n    };\n\n    _this.checkboxChange = _this.checkboxChange.bind(_this);\n    _this.filterResults = _this.filterResults.bind(_this);\n    _this.setFirstLoad = _this.setFirstLoad.bind(_this);\n    return _this;\n  }\n\n  _createClass(ClustersTagSelect, [{\n    key: \"checkboxChange\",\n    value: function checkboxChange(checked, tags) {\n      var selectedTags = this.state.selectedTags;\n\n      selectedTags = selectedTags.filter(function (tag) {\n        return !tags.includes(tag);\n      });\n\n      if (checked) {\n        var _selectedTags;\n\n        (_selectedTags = selectedTags).push.apply(_selectedTags, _toConsumableArray(tags));\n      }\n\n      this.setState({\n        selectedTags: selectedTags\n      });\n\n      this.props.update_display_setting_callback(selectedTags);\n    }\n  }, {\n    key: \"filterResults\",\n    value: function filterResults(evt) {\n      this.setState({\n        filterQuery: evt.target.value\n      });\n    }\n  }, {\n    key: \"setFirstLoad\",\n    value: function setFirstLoad(loaded) {\n      this.setState({\n        firstLoad: !!loaded\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return wp.element.createElement(\n        \"div\",\n        { className: \"orbital-clusters-list-card orbital-clusters-list-card--taxonomy orbital-clusters-list-card--taxonomy-tag\" },\n        wp.element.createElement(OrbitalTagFilter, { filterResults: this.filterResults }),\n        wp.element.createElement(OrbitalTagList, {\n          filterQuery: this.state.filterQuery,\n          selectedTags: this.state.selectedTags,\n          checkboxChange: this.checkboxChange,\n          firstLoad: this.state.firstLoad,\n          setFirstLoad: this.setFirstLoad\n        })\n      );\n    }\n  }]);\n\n  return ClustersTagSelect;\n}(React.Component);\n\nvar OrbitalTagFilter = function OrbitalTagFilter(_ref) {\n  var filterResults = _ref.filterResults;\n\n  return wp.element.createElement(\n    \"div\",\n    { className: \"orbital-clusters-list-card__input-wrapper\" },\n    wp.element.createElement(Dashicon, { icon: \"search\" }),\n    wp.element.createElement(\"input\", {\n      className: \"orbital-clusters-list-card__search\",\n      type: \"search\",\n      placeholder: __(\"Search for tags\", \"hostinger-affiliate-theme\"),\n      onChange: filterResults\n    })\n  );\n};\n\nvar OrbitalTagList = function (_React$Component2) {\n  _inherits(OrbitalTagList, _React$Component2);\n\n  function OrbitalTagList(props) {\n    _classCallCheck(this, OrbitalTagList);\n\n    var _this2 = _possibleConstructorReturn(this, (OrbitalTagList.__proto__ || Object.getPrototypeOf(OrbitalTagList)).call(this, props));\n\n    _this2.state = {\n      tags: [],\n      loaded: false,\n      query: \"\"\n    };\n\n    _this2.updatePreview = _this2.updatePreview.bind(_this2);\n    _this2.getQuery = _this2.getQuery.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(OrbitalTagList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.getQuery() !== this.state.query) {\n        this.updatePreview();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.getQuery() !== this.state.query && this.state.loaded) {\n        this.updatePreview();\n      }\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      var endpoint = \"/wp/v2/tags?per_page=-1\";\n      return endpoint;\n    }\n  }, {\n    key: \"updatePreview\",\n    value: function updatePreview() {\n      var self = this;\n      var query = this.getQuery();\n\n      self.setState({\n        loaded: false\n      });\n\n      apiFetch({ path: query }).then(function (tags) {\n        self.setState({\n          tags: tags,\n          loaded: true,\n          query: query\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          filterQuery = _props.filterQuery,\n          selectedTags = _props.selectedTags,\n          checkboxChange = _props.checkboxChange,\n          firstLoad = _props.firstLoad,\n          setFirstLoad = _props.setFirstLoad;\n\n\n      if (!this.state.loaded) {\n        return __(\"Loading\", \"hostinger-affiliate-theme\");\n      }\n\n      if (0 === this.state.tags.length) {\n        return __(\"No tags found\", \"hostinger-affiliate-theme\");\n      }\n\n      var handleTagsToCheck = function handleTagsToCheck(evt, parent, tags) {\n        var ids = getTagChildren(parent, tags).map(function (tag) {\n          return tag.id;\n        });\n\n        ids.push(parent.id);\n\n        checkboxChange(evt.target.checked, ids);\n      };\n\n      var getTagChildren = function getTagChildren(parent, tags) {\n        var children = [];\n\n        tags.filter(function (tag) {\n          return tag.parent === parent.id;\n        }).forEach(function (tag) {\n          children.push(tag);\n          children.push.apply(children, _toConsumableArray(getTagChildren(tag, tags)));\n        });\n\n        return children;\n      };\n\n      var tagHasChildren = function tagHasChildren(parent, tags) {\n        return !!getTagChildren(parent, tags).length;\n      };\n\n      var isIndeterminate = function isIndeterminate(tag, tags) {\n        if (selectedTags.includes(tag.id)) {\n          return false;\n        }\n\n        var children = getTagChildren(tag, tags).map(function (tag) {\n          return tag.id;\n        });\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var child = _step.value;\n\n            if (selectedTags.includes(child)) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return false;\n      };\n\n      var TagTree = function TagTree(_ref2) {\n        var tags = _ref2.tags,\n            parent = _ref2.parent;\n\n        var filteredTags = tags.filter(function (tag) {\n          return tag.parent === parent;\n        });\n        if (firstLoad && selectedTags.length > 0) {\n          selectedTags.filter(function (tag) {\n            return tag.parent === 0;\n          }).forEach(function (tag) {\n            var children = getTagChildren(tag, selectedTags);\n          });\n\n          setFirstLoad(false);\n        }\n\n        return filteredTags.length > 0 && wp.element.createElement(\n          \"ul\",\n          null,\n          filteredTags.map(function (tag) {\n            return wp.element.createElement(\n              \"li\",\n              { key: tag.id, className: \"orbital-clusters-list-card__item\" },\n              wp.element.createElement(\n                \"label\",\n                {\n                  className: 0 === tag.parent ? \"orbital-clusters-list-card__content\" : \"orbital-clusters-list-card__content\",\n                  htmlFor: \"orbital-tag-\" + tag.id\n                },\n                wp.element.createElement(\"input\", {\n                  type: \"checkbox\",\n                  id: \"orbital-tag-\" + tag.id,\n                  value: tag.id,\n                  checked: selectedTags.includes(tag.id),\n                  onChange: function onChange(evt) {\n                    return handleTagsToCheck(evt, tag, tags);\n                  },\n                  ref: function ref(el) {\n                    return el && (el.indeterminate = isIndeterminate(tag, tags));\n                  }\n                }),\n                \" \",\n                tag.name,\n                wp.element.createElement(\n                  \"span\",\n                  { className: \"orbital-clusters-list-card__taxonomy-count\" },\n                  tag.count\n                )\n              ),\n              wp.element.createElement(TagTree, { tags: tags, parent: tag.id })\n            );\n          })\n        );\n      };\n\n      var tagsData = this.state.tags;\n\n      if (\"\" !== filterQuery) {\n        tagsData = tagsData.filter(function (tag) {\n          return tag.slug.includes(filterQuery.toLowerCase());\n        });\n      }\n\n      return wp.element.createElement(\n        \"div\",\n        { className: \"orbital-clusters-list-card__results\" },\n        wp.element.createElement(TagTree, { tags: tagsData })\n      );\n    }\n  }]);\n\n  return OrbitalTagList;\n}(React.Component);\n\n//# sourceURL=webpack:///./src/cluster/views/tag-select.jsx?");

			/***/ })

		/******/ });
